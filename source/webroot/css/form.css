@import url(https://fonts.googleapis.com/earlyaccess/notosansjapanese.css);@charset "UTF-8";
/*** Reset CSS ***/
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video { margin: 0; padding: 0; border: 0; font: inherit; font-size: 100%; vertical-align: baseline; }

html { line-height: 1; }

ol, ul { list-style: none; }

table { border-collapse: collapse; border-spacing: 0; }

caption, th, td { text-align: left; font-weight: normal; vertical-align: middle; }

q, blockquote { quotes: none; }

q:before, q:after, blockquote:before, blockquote:after { content: ""; content: none; }

a img { border: none; }

article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary { display: block; }

* { box-sizing: border-box; }

input, textarea { outline: 0; }

img { vertical-align: top; }

.container, .inner, #header, .table01 th, .table01 td { zoom: 1; }

.container:after, .inner:after, #header:after, .table01 th:after, .table01 td:after { clear: both; content: ''; display: block; }

@media only screen and (min-width: 1024px) { .submit-button { transition: all 0.2s ease-in; }
    .submit-button:hover { filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=70); opacity: 0.7; } }

.underline-fade-top-link { position: relative; display: inline-block; text-decoration: none; transition: all .5s ease; }

.underline-fade-top-link::after { position: absolute; left: 0; content: ''; width: 100%; height: 1px; background: #ccc; transition: .3s; opacity: 0; visibility: hidden; bottom: 1px; }

.underline-fade-top-link:hover::after { bottom: -2px; opacity: 1; visibility: visible; }

.underline-fade-top-link:hover { opacity: .6; }

.underline-fade-bottom-link { position: relative; display: inline-block; text-decoration: none; transition: all .5s ease; }

.underline-fade-bottom-link::after { position: absolute; left: 0; content: ''; width: 100%; height: 1px; background: #ccc; transition: .3s; opacity: 0; visibility: hidden; bottom: -4px; }

.underline-fade-bottom-link:hover::after { bottom: -2px; opacity: 1; visibility: visible; }

.underline-fade-bottom-link:hover { opacity: .6; }

.underline-slide-left-right-link { position: relative; display: inline-block; text-decoration: none; transition: all .5s ease; }

.underline-slide-left-right-link::after { position: absolute; left: 0; content: ''; width: 100%; height: 1px; background: #ccc; bottom: -2px; transform: scale(0, 1); transition: transform .3s; transform-origin: left top; }

.underline-slide-left-right-link:hover::after { transform: scale(1, 1); }

.underline-slide-left-right-link:hover { opacity: .6; }

.underline-slide-right-left-link { position: relative; display: inline-block; text-decoration: none; transition: all .5s ease; }

.underline-slide-right-left-link::after { position: absolute; left: 0; content: ''; width: 100%; height: 1px; background: #ccc; bottom: -2px; transform: scale(0, 1); transition: transform .3s; transform-origin: right top; }

.underline-slide-right-left-link:hover::after { transform: scale(1, 1); }

.underline-slide-right-left-link:hover { opacity: .6; }

body { font-family: 'Noto Sans Japanese', '\6E38\30B4\30B7\30C3\30AF', YuGothic, '\30D2\30E9\30AE\30CE\89D2\30B4   Pro W3', 'Hiragino Kaku Gothic Pro', '\30E1\30A4\30EA\30AA', Meiryo, '\FF2D\FF33   \FF30\30B4\30B7\30C3\30AF', sans-serif; }

.tac { text-align: center; }

.tal { text-align: left; }

.tar { text-align: right; }

* html { font-size: 100%; }

html { font-size: 16px; line-height: 1.5em; }

@media only screen and (max-width: 599px) { body { font-size: 0.875em; line-height: 1.71429em; } }

/** keyframes **/

@keyframes fade-in { 0% { opacity: 0; }
    100% { opacity: 1; } }

@keyframes fade-out { 0% { opacity: 1; }
    100% { opacity: 0; } }

/*** layout ***/
/*** Breadcrumbs ***/
/*** Common ***/
.noscript { background-color: #ffe5e5; border: 1px solid #f00; color: #f00; display: none; font-weight: bold; line-height: 3; text-align: center; }

html, body { height: 100%; }

.container { box-sizing: border-box; margin: 0 auto; width: 90%; }

@media only screen and (max-width: 1023px) { .container { width: 100%; } }

.inner { margin: 0 auto; width: 90%; }

.note-area { font-size: 14px; font-size: 0.875rem; margin: 1em 0; }

.note-area a { color: #02B875; position: relative; display: inline-block; text-decoration: none; transition: all .5s ease; }

.note-area a::after { position: absolute; left: 0; content: ''; width: 100%; height: 1px; background: #ccc; transition: .3s; opacity: 0; visibility: hidden; bottom: 1px; }

.note-area a:hover::after { bottom: -2px; opacity: 1; visibility: visible; }

.note-area a:hover { opacity: .6; }

.note-area .attention { margin-bottom: 2em; }

.note-area .checkbox { text-align: center; }

/*** Footer ***/
/*** Header ***/
/*** Navigation ***/
/*** module ***/
/* Buttons */
.submit-button { -webkit-appearance: none; -moz-appearance: none; appearance: none; background: #02B875; display: block; border: none; color: #fafafa; font-size: 20px; font-size: 1.25rem; width: 100%; max-width: 320px; text-align: center; border-radius: 5px; line-height: 2em; cursor: pointer; }

/* Forms */
.form-wrapper { background: #f7f7f7; padding: 10%; width: 90%; margin: 0 auto; }

@media only screen and (max-width: 1023px) { .form-wrapper { width: 100%; } }

.form-style01 { font-size: 16px; font-size: 1rem; }

.form-style01 label { cursor: pointer; }

.form-style01 input[type="text"], .form-style01 input[type="number"], .form-style01 input[type="password"], .form-style01 input[type="email"], .form-style01 select, .form-style01 textarea { font-size: 16px; font-size: 1rem; background: #fafafa; cursor: pointer; }

.form-style01 input[type="text"], .form-style01 input[type="number"], .form-style01 input[type="password"], .form-style01 input[type="email"], .form-style01 textarea { margin-bottom: 1em; }

.form-style01 input[type="text"], .form-style01 input[type="number"], .form-style01 input[type="password"], .form-style01 input[type="email"], .form-style01 textarea, .form-style01 select { -webkit-appearance: none; -moz-appearance: none; appearance: none; border: 1px solid #ccc; padding: 10px; border-radius: 5px; transition: all .5s ease; width: 100%; outline: none; }

.form-style01 input[type="text"]:hover, .form-style01 input[type="text"]:focus, .form-style01 input[type="number"]:hover, .form-style01 input[type="number"]:focus, .form-style01 input[type="password"]:hover, .form-style01 input[type="password"]:focus, .form-style01 input[type="email"]:hover, .form-style01 input[type="email"]:focus, .form-style01 textarea:hover, .form-style01 textarea:focus, .form-style01 select:hover, .form-style01 select:focus { border: 1px solid gray; background: #fff; }

.form-style01 .select-wrapper { position: relative; width: 100%; margin-bottom: 1em; }

.form-style01 .select-wrapper::after { position: absolute; display: block; content: ""; z-index: 0; top: 0; bottom: 0; margin: auto 0; right: 9px; width: 0; height: 0; border-style: solid; border-width: 6px 6px 0 6px; border-color: #999999 transparent transparent transparent; }

.form-style01 select::-ms-expand { display: none; }

.form-style01 .submit-button { margin: 0 auto; }

.checkbox-list { padding-left: 2em; padding-bottom: 1em; border-bottom: 1px solid #ccc; }

/* Tables */
table { table-layout: fixed; }

.table01 { width: 100%; }

.table01 th { width: 30%; vertical-align: top; position: relative; }

.table01 th.required::after { position: absolute; display: block; content: "\5FC5\9808"; color: red; }

.table01 td { width: 100%; display: block; }

.table01 td.col-2 .select-wrapper { width: 49%; float: left; }

.table01 td.col-2 .select-wrapper:first-child { margin-right: 2%; }

@media only screen and (max-width: 599px) { .table01 td.col-2 .select-wrapper { margin-right: 0; width: 100%; } }

.table01 td.col-2 input { display: inline-block; width: 49%; }

.table01 td.col-2 input:first-child { margin-right: 2%; }

@media only screen and (max-width: 1023px) { .table01 td.col-2 input { margin-right: 0; width: 100%; } }

.table01 td.col-2.postal-code span { display: inline-block; width: 2%; margin: 0 1%; }

.table01 td.col-2.postal-code input, .table01 td.col-2.postal-code .select-wrapper { width: 27%; margin-right: 0; }

@media only screen and (max-width: 599px) { .table01 td.col-2.postal-code input, .table01 td.col-2.postal-code .select-wrapper { width: 30.5%; } }

.table01 td.col-2.card .select-wrapper { width: 27%; margin-right: 6%; }

@media only screen and (max-width: 599px) { .table01 td.col-2.card .select-wrapper { width: 90%; margin-right: 10%; } }

.table01 td.col-2.card .select-wrapper:first-child::before { position: absolute; display: block; content: "\6708"; right: -19%; top: 7px; }

@media only screen and (max-width: 599px) { .table01 td.col-2.card .select-wrapper:first-child::before { right: -10%; } }

.table01 td.col-2.card .select-wrapper:last-child::before { position: absolute; display: block; content: "\5E74"; right: -19%; top: 7px; }

@media only screen and (max-width: 599px) { .table01 td.col-2.card .select-wrapper:last-child::before { right: -10%; } }

.table01 td.col-3 .select-wrapper { width: 32%; float: left; margin-right: 2%; }

.table01 td.col-3 .select-wrapper:last-child { margin-right: 0; }

@media only screen and (max-width: 599px) { .table01 td.col-3 .select-wrapper { margin-right: 0; width: 100%; } }

.table01 td.col-3 input { display: inline-block; width: 32%; margin-right: 2%; }

.table01 td.col-3 input:last-child { margin-right: 0; }

@media only screen and (max-width: 599px) { .table01 td.col-3 input { margin-right: 0; width: 100%; } }

.table01 td.col-3.phone span { display: inline-block; width: 2%; margin: 0 1%; }

.table01 td.col-3.phone input, .table01 td.col-3.phone .select-wrapper { width: 27%; margin-right: 0; }

@media only screen and (max-width: 599px) { .table01 td.col-3.phone input, .table01 td.col-3.phone .select-wrapper { width: 30.5%; } }

.table01 td.col-3.birth .select-wrapper { width: 27%; margin-right: 6%; }

@media only screen and (max-width: 599px) { .table01 td.col-3.birth .select-wrapper { width: 90%; margin-right: 10%; } }

.table01 td.col-3.birth .select-wrapper::before { position: absolute; display: block; content: "\6708"; right: -19%; top: 7px; }

@media only screen and (max-width: 599px) { .table01 td.col-3.birth .select-wrapper::before { right: -10%; } }

.table01 td.col-3.birth .select-wrapper:first-child::before { position: absolute; display: block; content: "\5E74"; right: -19%; top: 7px; }

@media only screen and (max-width: 599px) { .table01 td.col-3.birth .select-wrapper:first-child::before { right: -10%; } }

.table01 td.col-3.birth .select-wrapper:last-child::before { position: absolute; display: block; content: "\65E5"; right: -19%; top: 7px; }

@media only screen and (max-width: 599px) { .table01 td.col-3.birth .select-wrapper:last-child::before { right: -10%; } }

.table01 td.vertical li { display: inline-block; margin-right: 2%; margin-bottom: 2%; }

.table01 td.sub-label p { display: inline-block; text-align: center; font-size: 12px; width: 5%; }

@media only screen and (max-width: 1023px) { .table01 td.sub-label p { display: block; width: auto; text-align: left; } }

.table01 td.sub-label input, .table01 td.sub-label .select-wrapper { width: 44%; }

@media only screen and (max-width: 1023px) { .table01 td.sub-label input, .table01 td.sub-label .select-wrapper { width: 100%; } }

.table01 td.message { font-size: 14px; font-size: 0.875rem; color: red; margin-top: 1em; padding: 0 1em; }

@media only screen and (max-width: 599px) { .table01 td.message { padding: 0 5px; } }

.table01 td:last-child { margin-bottom: 2em; }

.table01 th, .table01 td { padding: 1em; }

@media only screen and (max-width: 1023px) { .table01 th, .table01 td { width: 100%; display: block; padding: 2%; } }

/****************************** Below For Each Page */
/*** / ***/

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdHlsZS5zY3NzP2RlNjIiLCJ3ZWJwYWNrOi8vLy4vYmFzZS9fcmVzZXQuc2Nzcz9mZTgxIiwid2VicGFjazovLy8uL2NvbXBhc3MtbWl4aW5zL2NvbXBhc3MvcmVzZXQvX3V0aWxpdGllcy5zY3NzPzdjNGMiLCJ3ZWJwYWNrOi8vLy4vY29tcGFzcy1taXhpbnMvY29tcGFzcy9jc3MzL19zaGFyZWQuc2Nzcz9hMzQwIiwid2VicGFjazovLy8uL2Jhc2UvX2V4dGVuZHMuc2Nzcz82MjUxIiwid2VicGFjazovLy8uL2Jhc2UvX21peGlucy5zY3NzPzRkOGUiLCJ3ZWJwYWNrOi8vLy4vY29tcGFzcy1taXhpbnMvY29tcGFzcy9jc3MzL190cmFuc2l0aW9uLnNjc3M/MDNiNiIsIndlYnBhY2s6Ly8vLi9jb21wYXNzLW1peGlucy9jb21wYXNzL2NzczMvX29wYWNpdHkuc2Nzcz84OGIyIiwid2VicGFjazovLy8uL2NvbXBhc3MtbWl4aW5zL2NvbXBhc3MvdHlwb2dyYXBoeS9fdmVydGljYWxfcmh5dGhtLnNjc3M/MDBhMSIsIndlYnBhY2s6Ly8vLi9iYXNlL190eXBvZ3JhcGh5LnNjc3M/MDNkYyIsIndlYnBhY2s6Ly8vLi9iYXNlL19rZXlmcmFtZXMuc2Nzcz9iZjcxIiwid2VicGFjazovLy8uL2xheW91dC9fYWxsLnNjc3M/N2Y2ZiIsIndlYnBhY2s6Ly8vLi9sYXlvdXQvX2JyZWFkY3J1bWJzLnNjc3M/MTA2ZiIsIndlYnBhY2s6Ly8vLi9sYXlvdXQvX2NvbW1vbi5zY3NzPzc4NDgiLCJ3ZWJwYWNrOi8vLy4vYmFzZS9fdmFyLnNjc3M/YzRlZCIsIndlYnBhY2s6Ly8vLi9sYXlvdXQvX2Zvb3Rlci5zY3NzP2E3YWQiLCJ3ZWJwYWNrOi8vLy4vbGF5b3V0L19oZWFkZXIuc2Nzcz8yYzZjIiwid2VicGFjazovLy8uL2xheW91dC9fbmF2YmFyLnNjc3M/NWM0NyIsIndlYnBhY2s6Ly8vLi9tb2R1bGUvX2FsbC5zY3NzP2Q0ZjQiLCJ3ZWJwYWNrOi8vLy4vbW9kdWxlL19idXR0b25zLnNjc3M/NGRkNiIsIndlYnBhY2s6Ly8vLi9tb2R1bGUvX2Zvcm1zLnNjc3M/NzMyNyIsIndlYnBhY2s6Ly8vLi9tb2R1bGUvX3RhYmxlcy5zY3NzP2FjODUiLCJ3ZWJwYWNrOi8vLy4vcGFnZXMvX2FsbC5zY3NzPzVmNjQiLCJ3ZWJwYWNrOi8vLy4vcGFnZXMvX2hvbWUuc2Nzcz81N2Q3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIyRUFBQSxpQkFBaUI7QUNBakIsbUJBQW1CO0FDSWpCLDZlQTZEQSxVQUFTLENBQ1QsV0FBVSxDQUNWLFVBQVMsQ0FJVCxjQUFhLENBQ2IsZ0JBQWUsQ0FDZix5QkFBd0IsRUF2REE7O0FBR3hCLE9BNkRBLGVBQWMsRUE1RFU7O0FBQ3hCLFNBK0RBLGlCQUFnQixFQTlEYzs7QUFDOUIsUUFpRUEsMEJBQXlCLENBQ3pCLGtCQUFpQixFQWpFUTs7QUFDekIsa0JBb0VBLGlCQUFnQixDQUNoQixvQkFBbUIsQ0FDbkIsdUJBQXNCLEVBckVROztBQUM5QixnQkF3RUEsYUFBWSxFQXZFaUI7O0FBRDdCLHlEQTBFRSxZQUFXLENBQ1gsY0FBYSxFQUFJOztBQXpFbkIsUUE2RUEsYUFBWSxFQTVFMkI7O0FBbUZ2Qyx5R0FDRSxlQUFjLEVBQUk7O0FEaEh0QixJRWVpRSx1QkZkakMsRUFDL0I7O0FBR0Qsa0JDcUVFLFdBQVUsRURsRVg7O0FBRUQsTUFDRSxvQkFBbUIsRUFDcEI7O0FHaEJELHdEQUNFLFFBQU0sRUFNUDs7QUFQRCxzRkFHSSxZQUFXLENBQ1gsWUFBVyxDQUNYLGVBQWMsRUFDZjs7QUNxQkssNkNEbEJSLGlCRW1MMEQsNkJGakxuQixFQUt0QztFQVBELHVCR0FJLDREQUE0RixDQUU5RixhSEV1QixFQUNwQjs7QUFPTCwyQkM4Q0ksbUJBQWtCLENBQ2xCLHNCQUFxQixDQUNyQixzQkFBcUIsQ0FDckIseUJBQXdCLEVEL0MzQjs7QUNnREcsa0NBQ0ksbUJBQWtCLENBQ2xCLFFBQU8sQ0FDUCxZQUFXLENBQ1gsWUFBVyxDQUNY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QUNyQixpQkFBZ0IsQ0FDaEIsa0JBQWlCLEVBQ3BCOztBQXpLYiwwQkE2S2dCLHNCQUFxQixDQUNyQixtQkFBa0IsQ0FDbEIsZ0JBQWUsQ0FDZixVQUFTLEVBTVo7O0FoQjVKTCw2Q2dCMUJSLDBCQWtMb0IsZUFBYyxDQUNkLFlBQVcsQ0FDWCxpQkFBZ0IsRUFFdkI7O0FBdExiLHFFQXlMZ0IsV0FBVSxFQUliOztBaEJuS0wsNkNnQjFCUixxRUEyTG9CLFlBQVcsRUFFbEI7O0FBN0xiLHNCaEJpREksZ0JnQitJd0IsQ2hCOUl4QixvQkFOd0MsQ2dCc0poQyxXUHJNSCxDT3NNRyxnQkFBZSxDQUNmLGVBQWMsRUFJakI7O0FoQjFLRCw0Q2dCOUJSLHNCQXNNZ0IsZUFBYyxFQUVyQjs7QUF4TVQseUJBME1ZLG1CQUFrQixFQUNyQjs7QUEzTVQsMkJBZ05RLGFBQVksRUFNZjs7QWhCNUxHLDZDZ0IxQlIsMkJBa05ZLFlBQVcsQ0FDWCxlQUFjLENBQ2QsWUFBVyxFQUVsQjs7QUMzTkwsc0RBRStCO0FDRi9CLFdBQVciLCJmaWxlIjoic3R5bGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuLyoqKiBSZXNldCBDU1MgKioqL1xuQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9lYXJseWFjY2Vzcy9ub3Rvc2Fuc2phcGFuZXNlLmNzcyk7XG5odG1sLCBib2R5LCBkaXYsIHNwYW4sIGFwcGxldCwgb2JqZWN0LCBpZnJhbWUsIGgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHAsIGJsb2NrcXVvdGUsIHByZSwgYSwgYWJiciwgYWNyb255bSwgYWRkcmVzcywgYmlnLCBjaXRlLCBjb2RlLCBkZWwsIGRmbiwgZW0sIGltZywgaW5zLCBrYmQsIHEsIHMsIHNhbXAsIHNtYWxsLCBzdHJpa2UsIHN0cm9uZywgc3ViLCBzdXAsIHR0LCB2YXIsIGIsIHUsIGksIGNlbnRlciwgZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSwgZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsIHRhYmxlLCBjYXB0aW9uLCB0Ym9keSwgdGZvb3QsIHRoZWFkLCB0ciwgdGgsIHRkLCBhcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLCBlbWJlZCwgZmlndXJlLCBmaWdjYXB0aW9uLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLCBtZW51LCBuYXYsIG91dHB1dCwgcnVieSwgc2VjdGlvbiwgc3VtbWFyeSwgdGltZSwgbWFyaywgYXVkaW8sIHZpZGVvIHsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyBib3JkZXI6IDA7IGZvbnQ6IGluaGVyaXQ7IGZvbnQtc2l6ZTogMTAwJTsgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbmh0bWwgeyBsaW5lLWhlaWdodDogMTsgfVxuXG5vbCwgdWwgeyBsaXN0LXN0eWxlOiBub25lOyB9XG5cbnRhYmxlIHsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgYm9yZGVyLXNwYWNpbmc6IDA7IH1cblxuY2FwdGlvbiwgdGgsIHRkIHsgdGV4dC1hbGlnbjogbGVmdDsgZm9udC13ZWlnaHQ6IG5vcm1hbDsgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuXG5xLCBibG9ja3F1b3RlIHsgcXVvdGVzOiBub25lOyB9XG5cbnE6YmVmb3JlLCBxOmFmdGVyLCBibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlciB7IGNvbnRlbnQ6IFwiXCI7IGNvbnRlbnQ6IG5vbmU7IH1cblxuYSBpbWcgeyBib3JkZXI6IG5vbmU7IH1cblxuYXJ0aWNsZSwgYXNpZGUsIGRldGFpbHMsIGZpZ2NhcHRpb24sIGZpZ3VyZSwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWFpbiwgbWVudSwgbmF2LCBzZWN0aW9uLCBzdW1tYXJ5IHsgZGlzcGxheTogYmxvY2s7IH1cblxuKiB7IC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDsgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94OyBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbmlucHV0LCB0ZXh0YXJlYSB7IG91dGxpbmU6IDA7IH1cblxuaW1nIHsgdmVydGljYWwtYWxpZ246IHRvcDsgfVxuXG4uY29udGFpbmVyLCAuaW5uZXIsICNoZWFkZXIsIC50YWJsZTAxIHRoLCAudGFibGUwMSB0ZCB7IHpvb206IDE7IH1cblxuLmNvbnRhaW5lcjphZnRlciwgLmlubmVyOmFmdGVyLCAjaGVhZGVyOmFmdGVyLCAudGFibGUwMSB0aDphZnRlciwgLnRhYmxlMDEgdGQ6YWZ0ZXIgeyBjbGVhcjogYm90aDsgY29udGVudDogJyc7IGRpc3BsYXk6IGJsb2NrOyB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7IC5zdWJtaXQtYnV0dG9uIHsgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlLWluOyAtbW96LXRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2UtaW47IC1vLXRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2UtaW47IHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2UtaW47IH1cbiAgLnN1Ym1pdC1idXR0b246aG92ZXIgeyBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5BbHBoYShPcGFjaXR5PTcwKTsgb3BhY2l0eTogMC43OyB9IH1cblxuLnVuZGVybGluZS1mYWRlLXRvcC1saW5rIHsgcG9zaXRpb246IHJlbGF0aXZlOyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgdHJhbnNpdGlvbjogYWxsIC41cyBlYXNlOyB9XG5cbi51bmRlcmxpbmUtZmFkZS10b3AtbGluazo6YWZ0ZXIgeyBwb3NpdGlvbjogYWJzb2x1dGU7IGxlZnQ6IDA7IGNvbnRlbnQ6ICcnOyB3aWR0aDogMTAwJTsgaGVpZ2h0OiAxcHg7IGJhY2tncm91bmQ6ICNjY2M7IHRyYW5zaXRpb246IC4zczsgb3BhY2l0eTogMDsgdmlzaWJpbGl0eTogaGlkZGVuOyBib3R0b206IDFweDsgfVxuXG4udW5kZXJsaW5lLWZhZGUtdG9wLWxpbms6aG92ZXI6OmFmdGVyIHsgYm90dG9tOiAtMnB4OyBvcGFjaXR5OiAxOyB2aXNpYmlsaXR5OiB2aXNpYmxlOyB9XG5cbi51bmRlcmxpbmUtZmFkZS10b3AtbGluazpob3ZlciB7IG9wYWNpdHk6IC42OyB9XG5cbi51bmRlcmxpbmUtZmFkZS1ib3R0b20tbGluayB7IHBvc2l0aW9uOiByZWxhdGl2ZTsgZGlzcGxheTogaW5saW5lLWJsb2NrOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IHRyYW5zaXRpb246IGFsbCAuNXMgZWFzZTsgfVxuXG4udW5kZXJsaW5lLWZhZGUtYm90dG9tLWxpbms6OmFmdGVyIHsgcG9zaXRpb246IGFic29sdXRlOyBsZWZ0OiAwOyBjb250ZW50OiAnJzsgd2lkdGg6IDEwMCU7IGhlaWdodDogMXB4OyBiYWNrZ3JvdW5kOiAjY2NjOyB0cmFuc2l0aW9uOiAuM3M7IG9wYWNpdHk6IDA7IHZpc2liaWxpdHk6IGhpZGRlbjsgYm90dG9tOiAtNHB4OyB9XG5cbi51bmRlcmxpbmUtZmFkZS1ib3R0b20tbGluazpob3Zlcjo6YWZ0ZXIgeyBib3R0b206IC0ycHg7IG9wYWNpdHk6IDE7IHZpc2liaWxpdHk6IHZpc2libGU7IH1cblxuLnVuZGVybGluZS1mYWRlLWJvdHRvbS1saW5rOmhvdmVyIHsgb3BhY2l0eTogLjY7IH1cblxuLnVuZGVybGluZS1zbGlkZS1sZWZ0LXJpZ2h0LWxpbmsgeyBwb3NpdGlvbjogcmVsYXRpdmU7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB0cmFuc2l0aW9uOiBhbGwgLjVzIGVhc2U7IH1cblxuLnVuZGVybGluZS1zbGlkZS1sZWZ0LXJpZ2h0LWxpbms6OmFmdGVyIHsgcG9zaXRpb246IGFic29sdXRlOyBsZWZ0OiAwOyBjb250ZW50OiAnJzsgd2lkdGg6IDEwMCU7IGhlaWdodDogMXB4OyBiYWNrZ3JvdW5kOiAjY2NjOyBib3R0b206IC0ycHg7IHRyYW5zZm9ybTogc2NhbGUoMCwgMSk7IHRyYW5zaXRpb246IHRyYW5zZm9ybSAuM3M7IHRyYW5zZm9ybS1vcmlnaW46IGxlZnQgdG9wOyB9XG5cbi51bmRlcmxpbmUtc2xpZGUtbGVmdC1yaWdodC1saW5rOmhvdmVyOjphZnRlciB7IHRyYW5zZm9ybTogc2NhbGUoMSwgMSk7IH1cblxuLnVuZGVybGluZS1zbGlkZS1sZWZ0LXJpZ2h0LWxpbms6aG92ZXIgeyBvcGFjaXR5OiAuNjsgfVxuXG4udW5kZXJsaW5lLXNsaWRlLXJpZ2h0LWxlZnQtbGluayB7IHBvc2l0aW9uOiByZWxhdGl2ZTsgZGlzcGxheTogaW5saW5lLWJsb2NrOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IHRyYW5zaXRpb246IGFsbCAuNXMgZWFzZTsgfVxuXG4udW5kZXJsaW5lLXNsaWRlLXJpZ2h0LWxlZnQtbGluazo6YWZ0ZXIgeyBwb3NpdGlvbjogYWJzb2x1dGU7IGxlZnQ6IDA7IGNvbnRlbnQ6ICcnOyB3aWR0aDogMTAwJTsgaGVpZ2h0OiAxcHg7IGJhY2tncm91bmQ6ICNjY2M7IGJvdHRvbTogLTJweDsgdHJhbnNmb3JtOiBzY2FsZSgwLCAxKTsgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4zczsgdHJhbnNmb3JtLW9yaWdpbjogcmlnaHQgdG9wOyB9XG5cbi51bmRlcmxpbmUtc2xpZGUtcmlnaHQtbGVmdC1saW5rOmhvdmVyOjphZnRlciB7IHRyYW5zZm9ybTogc2NhbGUoMSwgMSk7IH1cblxuLnVuZGVybGluZS1zbGlkZS1yaWdodC1sZWZ0LWxpbms6aG92ZXIgeyBvcGFjaXR5OiAuNjsgfVxuXG5ib2R5IHsgZm9udC1mYW1pbHk6ICdOb3RvIFNhbnMgSmFwYW5lc2UnLCAn5ri444K044K344OD44KvJywgWXVHb3RoaWMsICfjg5Ljg6njgq7jg47op5LjgrQgUHJvIFczJywgJ0hpcmFnaW5vIEtha3UgR290aGljIFBybycsICfjg6HjgqTjg6rjgqonLCBNZWlyeW8sICfvvK3vvLMg77yw44K044K344OD44KvJywgc2Fucy1zZXJpZjsgfVxuXG4udGFjIHsgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi50YWwgeyB0ZXh0LWFsaWduOiBsZWZ0OyB9XG5cbi50YXIgeyB0ZXh0LWFsaWduOiByaWdodDsgfVxuXG4qIGh0bWwgeyBmb250LXNpemU6IDEwMCU7IH1cblxuaHRtbCB7IGZvbnQtc2l6ZTogMTZweDsgbGluZS1oZWlnaHQ6IDEuNWVtOyB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTk5cHgpIHsgYm9keSB7IGZvbnQtc2l6ZTogMC44NzVlbTsgbGluZS1oZWlnaHQ6IDEuNzE0MjllbTsgfSB9XG5cbi8qKiBrZXlmcmFtZXMgKiovXG5ALXdlYmtpdC1rZXlmcmFtZXMgZmFkZS1pbiB7IDAlIHsgb3BhY2l0eTogMDsgfVxuICAxMDAlIHsgb3BhY2l0eTogMTsgfSB9XG5cbkAtbW96LWtleWZyYW1lcyBmYWRlLWluIHsgMCUgeyBvcGFjaXR5OiAwOyB9XG4gIDEwMCUgeyBvcGFjaXR5OiAxOyB9IH1cblxuQGtleWZyYW1lcyBmYWRlLWluIHsgMCUgeyBvcGFjaXR5OiAwOyB9XG4gIDEwMCUgeyBvcGFjaXR5OiAxOyB9IH1cblxuQC13ZWJraXQta2V5ZnJhbWVzIGZhZGUtb3V0IHsgMCUgeyBvcGFjaXR5OiAxOyB9XG4gIDEwMCUgeyBvcGFjaXR5OiAwOyB9IH1cblxuQC1tb3ota2V5ZnJhbWVzIGZhZGUtb3V0IHsgMCUgeyBvcGFjaXR5OiAxOyB9XG4gIDEwMCUgeyBvcGFjaXR5OiAwOyB9IH1cblxuQGtleWZyYW1lcyBmYWRlLW91dCB7IDAlIHsgb3BhY2l0eTogMTsgfVxuICAxMDAlIHsgb3BhY2l0eTogMDsgfSB9XG5cbi8qKiogbGF5b3V0ICoqKi9cbi8qKiogQnJlYWRjcnVtYnMgKioqL1xuLyoqKiBDb21tb24gKioqL1xuLm5vc2NyaXB0IHsgYmFja2dyb3VuZC1jb2xvcjogI2ZmZTVlNTsgYm9yZGVyOiAxcHggc29saWQgI2YwMDsgY29sb3I6ICNmMDA7IGRpc3BsYXk6IG5vbmU7IGZvbnQtd2VpZ2h0OiBib2xkOyBsaW5lLWhlaWdodDogMzsgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbmh0bWwsIGJvZHkgeyBoZWlnaHQ6IDEwMCU7IH1cblxuLmNvbnRhaW5lciB7IC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDsgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94OyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBtYXJnaW46IDAgYXV0bzsgd2lkdGg6IDkwJTsgfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjNweCkgeyAuY29udGFpbmVyIHsgd2lkdGg6IDEwMCU7IH0gfVxuXG4uaW5uZXIgeyBtYXJnaW46IDAgYXV0bzsgd2lkdGg6IDkwJTsgfVxuXG4ubm90ZS1hcmVhIHsgZm9udC1zaXplOiAxNHB4OyBmb250LXNpemU6IDAuODc1cmVtOyBtYXJnaW46IDFlbSAwOyB9XG5cbi5ub3RlLWFyZWEgYSB7IGNvbG9yOiAjMDJCODc1OyBwb3NpdGlvbjogcmVsYXRpdmU7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB0cmFuc2l0aW9uOiBhbGwgLjVzIGVhc2U7IH1cblxuLm5vdGUtYXJlYSBhOjphZnRlciB7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgbGVmdDogMDsgY29udGVudDogJyc7IHdpZHRoOiAxMDAlOyBoZWlnaHQ6IDFweDsgYmFja2dyb3VuZDogI2NjYzsgdHJhbnNpdGlvbjogLjNzOyBvcGFjaXR5OiAwOyB2aXNpYmlsaXR5OiBoaWRkZW47IGJvdHRvbTogMXB4OyB9XG5cbi5ub3RlLWFyZWEgYTpob3Zlcjo6YWZ0ZXIgeyBib3R0b206IC0ycHg7IG9wYWNpdHk6IDE7IHZpc2liaWxpdHk6IHZpc2libGU7IH1cblxuLm5vdGUtYXJlYSBhOmhvdmVyIHsgb3BhY2l0eTogLjY7IH1cblxuLm5vdGUtYXJlYSAuYXR0ZW50aW9uIHsgbWFyZ2luLWJvdHRvbTogMmVtOyB9XG5cbi5ub3RlLWFyZWEgLmNoZWNrYm94IHsgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi8qKiogRm9vdGVyICoqKi9cbi8qKiogSGVhZGVyICoqKi9cbi8qKiogTmF2aWdhdGlvbiAqKiovXG4vKioqIG1vZHVsZSAqKiovXG4vKiBCdXR0b25zICovXG4uc3VibWl0LWJ1dHRvbiB7IGFwcGVhcmFuY2U6IG5vbmU7IGJhY2tncm91bmQ6ICMwMkI4NzU7IGRpc3BsYXk6IGJsb2NrOyBib3JkZXI6IG5vbmU7IGNvbG9yOiAjZmFmYWZhOyBmb250LXNpemU6IDIwcHg7IGZvbnQtc2l6ZTogMS4yNXJlbTsgd2lkdGg6IDEwMCU7IG1heC13aWR0aDogMzIwcHg7IHRleHQtYWxpZ246IGNlbnRlcjsgYm9yZGVyLXJhZGl1czogNXB4OyBsaW5lLWhlaWdodDogMmVtOyBjdXJzb3I6IHBvaW50ZXI7IH1cblxuLyogRm9ybXMgKi9cbi5mb3JtLXdyYXBwZXIgeyBiYWNrZ3JvdW5kOiAjZjdmN2Y3OyBwYWRkaW5nOiAxMCU7IHdpZHRoOiA5MCU7IG1hcmdpbjogMCBhdXRvOyB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7IC5mb3JtLXdyYXBwZXIgeyB3aWR0aDogMTAwJTsgfSB9XG5cbi5mb3JtLXN0eWxlMDEgeyBmb250LXNpemU6IDE2cHg7IGZvbnQtc2l6ZTogMXJlbTsgfVxuXG4uZm9ybS1zdHlsZTAxIGxhYmVsIHsgY3Vyc29yOiBwb2ludGVyOyB9XG5cbi5mb3JtLXN0eWxlMDEgaW5wdXRbdHlwZT1cInRleHRcIl0sIC5mb3JtLXN0eWxlMDEgaW5wdXRbdHlwZT1cIm51bWJlclwiXSwgLmZvcm0tc3R5bGUwMSBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0sIC5mb3JtLXN0eWxlMDEgaW5wdXRbdHlwZT1cImVtYWlsXCJdLCAuZm9ybS1zdHlsZTAxIHNlbGVjdCwgLmZvcm0tc3R5bGUwMSB0ZXh0YXJlYSB7IGZvbnQtc2l6ZTogMTZweDsgZm9udC1zaXplOiAxcmVtOyBiYWNrZ3JvdW5kOiAjZmFmYWZhOyBjdXJzb3I6IHBvaW50ZXI7IH1cblxuLmZvcm0tc3R5bGUwMSBpbnB1dFt0eXBlPVwidGV4dFwiXSwgLmZvcm0tc3R5bGUwMSBpbnB1dFt0eXBlPVwibnVtYmVyXCJdLCAuZm9ybS1zdHlsZTAxIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSwgLmZvcm0tc3R5bGUwMSBpbnB1dFt0eXBlPVwiZW1haWxcIl0sIC5mb3JtLXN0eWxlMDEgdGV4dGFyZWEgeyBtYXJnaW4tYm90dG9tOiAxZW07IH1cblxuLmZvcm0tc3R5bGUwMSBpbnB1dFt0eXBlPVwidGV4dFwiXSwgLmZvcm0tc3R5bGUwMSBpbnB1dFt0eXBlPVwibnVtYmVyXCJdLCAuZm9ybS1zdHlsZTAxIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSwgLmZvcm0tc3R5bGUwMSBpbnB1dFt0eXBlPVwiZW1haWxcIl0sIC5mb3JtLXN0eWxlMDEgdGV4dGFyZWEsIC5mb3JtLXN0eWxlMDEgc2VsZWN0IHsgYXBwZWFyYW5jZTogbm9uZTsgYm9yZGVyOiAxcHggc29saWQgI2NjYzsgcGFkZGluZzogMTBweDsgYm9yZGVyLXJhZGl1czogNXB4OyB0cmFuc2l0aW9uOiBhbGwgLjVzIGVhc2U7IHdpZHRoOiAxMDAlOyBvdXRsaW5lOiBub25lOyB9XG5cbi5mb3JtLXN0eWxlMDEgaW5wdXRbdHlwZT1cInRleHRcIl06aG92ZXIsIC5mb3JtLXN0eWxlMDEgaW5wdXRbdHlwZT1cInRleHRcIl06Zm9jdXMsIC5mb3JtLXN0eWxlMDEgaW5wdXRbdHlwZT1cIm51bWJlclwiXTpob3ZlciwgLmZvcm0tc3R5bGUwMSBpbnB1dFt0eXBlPVwibnVtYmVyXCJdOmZvY3VzLCAuZm9ybS1zdHlsZTAxIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXTpob3ZlciwgLmZvcm0tc3R5bGUwMSBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl06Zm9jdXMsIC5mb3JtLXN0eWxlMDEgaW5wdXRbdHlwZT1cImVtYWlsXCJdOmhvdmVyLCAuZm9ybS1zdHlsZTAxIGlucHV0W3R5cGU9XCJlbWFpbFwiXTpmb2N1cywgLmZvcm0tc3R5bGUwMSB0ZXh0YXJlYTpob3ZlciwgLmZvcm0tc3R5bGUwMSB0ZXh0YXJlYTpmb2N1cywgLmZvcm0tc3R5bGUwMSBzZWxlY3Q6aG92ZXIsIC5mb3JtLXN0eWxlMDEgc2VsZWN0OmZvY3VzIHsgYm9yZGVyOiAxcHggc29saWQgZ3JheTsgYmFja2dyb3VuZDogI2ZmZjsgfVxuXG4uZm9ybS1zdHlsZTAxIC5zZWxlY3Qtd3JhcHBlciB7IHBvc2l0aW9uOiByZWxhdGl2ZTsgd2lkdGg6IDEwMCU7IG1hcmdpbi1ib3R0b206IDFlbTsgfVxuXG4uZm9ybS1zdHlsZTAxIC5zZWxlY3Qtd3JhcHBlcjo6YWZ0ZXIgeyBwb3NpdGlvbjogYWJzb2x1dGU7IGRpc3BsYXk6IGJsb2NrOyBjb250ZW50OiBcIlwiOyB6LWluZGV4OiAwOyB0b3A6IDA7IGJvdHRvbTogMDsgbWFyZ2luOiBhdXRvIDA7IHJpZ2h0OiA5cHg7IHdpZHRoOiAwOyBoZWlnaHQ6IDA7IGJvcmRlci1zdHlsZTogc29saWQ7IGJvcmRlci13aWR0aDogNnB4IDZweCAwIDZweDsgYm9yZGVyLWNvbG9yOiAjOTk5OTk5IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50OyB9XG5cbi5mb3JtLXN0eWxlMDEgc2VsZWN0OjotbXMtZXhwYW5kIHsgZGlzcGxheTogbm9uZTsgfVxuXG4uZm9ybS1zdHlsZTAxIC5zdWJtaXQtYnV0dG9uIHsgbWFyZ2luOiAwIGF1dG87IH1cblxuLmNoZWNrYm94LWxpc3QgeyBwYWRkaW5nLWxlZnQ6IDJlbTsgcGFkZGluZy1ib3R0b206IDFlbTsgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2M7IH1cblxuLyogVGFibGVzICovXG50YWJsZSB7IHRhYmxlLWxheW91dDogZml4ZWQ7IH1cblxuLnRhYmxlMDEgeyB3aWR0aDogMTAwJTsgfVxuXG4udGFibGUwMSB0aCB7IHdpZHRoOiAzMCU7IHZlcnRpY2FsLWFsaWduOiB0b3A7IHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG4udGFibGUwMSB0aC5yZXF1aXJlZDo6YWZ0ZXIgeyBwb3NpdGlvbjogYWJzb2x1dGU7IGRpc3BsYXk6IGJsb2NrOyBjb250ZW50OiBcIuW/hemgiFwiOyBjb2xvcjogcmVkOyB9XG5cbi50YWJsZTAxIHRkIHsgd2lkdGg6IDEwMCU7IGRpc3BsYXk6IGJsb2NrOyB9XG5cbi50YWJsZTAxIHRkLmNvbC0yIC5zZWxlY3Qtd3JhcHBlciB7IHdpZHRoOiA0OSU7IGZsb2F0OiBsZWZ0OyB9XG5cbi50YWJsZTAxIHRkLmNvbC0yIC5zZWxlY3Qtd3JhcHBlcjpmaXJzdC1jaGlsZCB7IG1hcmdpbi1yaWdodDogMiU7IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1OTlweCkgeyAudGFibGUwMSB0ZC5jb2wtMiAuc2VsZWN0LXdyYXBwZXIgeyBtYXJnaW4tcmlnaHQ6IDA7IHdpZHRoOiAxMDAlOyB9IH1cblxuLnRhYmxlMDEgdGQuY29sLTIgaW5wdXQgeyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IHdpZHRoOiA0OSU7IH1cblxuLnRhYmxlMDEgdGQuY29sLTIgaW5wdXQ6Zmlyc3QtY2hpbGQgeyBtYXJnaW4tcmlnaHQ6IDIlOyB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7IC50YWJsZTAxIHRkLmNvbC0yIGlucHV0IHsgbWFyZ2luLXJpZ2h0OiAwOyB3aWR0aDogMTAwJTsgfSB9XG5cbi50YWJsZTAxIHRkLmNvbC0yLnBvc3RhbC1jb2RlIHNwYW4geyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IHdpZHRoOiAyJTsgbWFyZ2luOiAwIDElOyB9XG5cbi50YWJsZTAxIHRkLmNvbC0yLnBvc3RhbC1jb2RlIGlucHV0LCAudGFibGUwMSB0ZC5jb2wtMi5wb3N0YWwtY29kZSAuc2VsZWN0LXdyYXBwZXIgeyB3aWR0aDogMjclOyBtYXJnaW4tcmlnaHQ6IDA7IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1OTlweCkgeyAudGFibGUwMSB0ZC5jb2wtMi5wb3N0YWwtY29kZSBpbnB1dCwgLnRhYmxlMDEgdGQuY29sLTIucG9zdGFsLWNvZGUgLnNlbGVjdC13cmFwcGVyIHsgd2lkdGg6IDMwLjUlOyB9IH1cblxuLnRhYmxlMDEgdGQuY29sLTIuY2FyZCAuc2VsZWN0LXdyYXBwZXIgeyB3aWR0aDogMjclOyBtYXJnaW4tcmlnaHQ6IDYlOyB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTk5cHgpIHsgLnRhYmxlMDEgdGQuY29sLTIuY2FyZCAuc2VsZWN0LXdyYXBwZXIgeyB3aWR0aDogOTAlOyBtYXJnaW4tcmlnaHQ6IDEwJTsgfSB9XG5cbi50YWJsZTAxIHRkLmNvbC0yLmNhcmQgLnNlbGVjdC13cmFwcGVyOmZpcnN0LWNoaWxkOjpiZWZvcmUgeyBwb3NpdGlvbjogYWJzb2x1dGU7IGRpc3BsYXk6IGJsb2NrOyBjb250ZW50OiBcIuaciFwiOyByaWdodDogLTE5JTsgdG9wOiA3cHg7IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1OTlweCkgeyAudGFibGUwMSB0ZC5jb2wtMi5jYXJkIC5zZWxlY3Qtd3JhcHBlcjpmaXJzdC1jaGlsZDo6YmVmb3JlIHsgcmlnaHQ6IC0xMCU7IH0gfVxuXG4udGFibGUwMSB0ZC5jb2wtMi5jYXJkIC5zZWxlY3Qtd3JhcHBlcjpsYXN0LWNoaWxkOjpiZWZvcmUgeyBwb3NpdGlvbjogYWJzb2x1dGU7IGRpc3BsYXk6IGJsb2NrOyBjb250ZW50OiBcIuW5tFwiOyByaWdodDogLTE5JTsgdG9wOiA3cHg7IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1OTlweCkgeyAudGFibGUwMSB0ZC5jb2wtMi5jYXJkIC5zZWxlY3Qtd3JhcHBlcjpsYXN0LWNoaWxkOjpiZWZvcmUgeyByaWdodDogLTEwJTsgfSB9XG5cbi50YWJsZTAxIHRkLmNvbC0zIC5zZWxlY3Qtd3JhcHBlciB7IHdpZHRoOiAzMiU7IGZsb2F0OiBsZWZ0OyBtYXJnaW4tcmlnaHQ6IDIlOyB9XG5cbi50YWJsZTAxIHRkLmNvbC0zIC5zZWxlY3Qtd3JhcHBlcjpsYXN0LWNoaWxkIHsgbWFyZ2luLXJpZ2h0OiAwOyB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTk5cHgpIHsgLnRhYmxlMDEgdGQuY29sLTMgLnNlbGVjdC13cmFwcGVyIHsgbWFyZ2luLXJpZ2h0OiAwOyB3aWR0aDogMTAwJTsgfSB9XG5cbi50YWJsZTAxIHRkLmNvbC0zIGlucHV0IHsgZGlzcGxheTogaW5saW5lLWJsb2NrOyB3aWR0aDogMzIlOyBtYXJnaW4tcmlnaHQ6IDIlOyB9XG5cbi50YWJsZTAxIHRkLmNvbC0zIGlucHV0Omxhc3QtY2hpbGQgeyBtYXJnaW4tcmlnaHQ6IDA7IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1OTlweCkgeyAudGFibGUwMSB0ZC5jb2wtMyBpbnB1dCB7IG1hcmdpbi1yaWdodDogMDsgd2lkdGg6IDEwMCU7IH0gfVxuXG4udGFibGUwMSB0ZC5jb2wtMy5waG9uZSBzcGFuIHsgZGlzcGxheTogaW5saW5lLWJsb2NrOyB3aWR0aDogMiU7IG1hcmdpbjogMCAxJTsgfVxuXG4udGFibGUwMSB0ZC5jb2wtMy5waG9uZSBpbnB1dCwgLnRhYmxlMDEgdGQuY29sLTMucGhvbmUgLnNlbGVjdC13cmFwcGVyIHsgd2lkdGg6IDI3JTsgbWFyZ2luLXJpZ2h0OiAwOyB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTk5cHgpIHsgLnRhYmxlMDEgdGQuY29sLTMucGhvbmUgaW5wdXQsIC50YWJsZTAxIHRkLmNvbC0zLnBob25lIC5zZWxlY3Qtd3JhcHBlciB7IHdpZHRoOiAzMC41JTsgfSB9XG5cbi50YWJsZTAxIHRkLmNvbC0zLmJpcnRoIC5zZWxlY3Qtd3JhcHBlciB7IHdpZHRoOiAyNyU7IG1hcmdpbi1yaWdodDogNiU7IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1OTlweCkgeyAudGFibGUwMSB0ZC5jb2wtMy5iaXJ0aCAuc2VsZWN0LXdyYXBwZXIgeyB3aWR0aDogOTAlOyBtYXJnaW4tcmlnaHQ6IDEwJTsgfSB9XG5cbi50YWJsZTAxIHRkLmNvbC0zLmJpcnRoIC5zZWxlY3Qtd3JhcHBlcjo6YmVmb3JlIHsgcG9zaXRpb246IGFic29sdXRlOyBkaXNwbGF5OiBibG9jazsgY29udGVudDogXCLmnIhcIjsgcmlnaHQ6IC0xOSU7IHRvcDogN3B4OyB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTk5cHgpIHsgLnRhYmxlMDEgdGQuY29sLTMuYmlydGggLnNlbGVjdC13cmFwcGVyOjpiZWZvcmUgeyByaWdodDogLTEwJTsgfSB9XG5cbi50YWJsZTAxIHRkLmNvbC0zLmJpcnRoIC5zZWxlY3Qtd3JhcHBlcjpmaXJzdC1jaGlsZDo6YmVmb3JlIHsgcG9zaXRpb246IGFic29sdXRlOyBkaXNwbGF5OiBibG9jazsgY29udGVudDogXCLlubRcIjsgcmlnaHQ6IC0xOSU7IHRvcDogN3B4OyB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTk5cHgpIHsgLnRhYmxlMDEgdGQuY29sLTMuYmlydGggLnNlbGVjdC13cmFwcGVyOmZpcnN0LWNoaWxkOjpiZWZvcmUgeyByaWdodDogLTEwJTsgfSB9XG5cbi50YWJsZTAxIHRkLmNvbC0zLmJpcnRoIC5zZWxlY3Qtd3JhcHBlcjpsYXN0LWNoaWxkOjpiZWZvcmUgeyBwb3NpdGlvbjogYWJzb2x1dGU7IGRpc3BsYXk6IGJsb2NrOyBjb250ZW50OiBcIuaXpVwiOyByaWdodDogLTE5JTsgdG9wOiA3cHg7IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1OTlweCkgeyAudGFibGUwMSB0ZC5jb2wtMy5iaXJ0aCAuc2VsZWN0LXdyYXBwZXI6bGFzdC1jaGlsZDo6YmVmb3JlIHsgcmlnaHQ6IC0xMCU7IH0gfVxuXG4udGFibGUwMSB0ZC52ZXJ0aWNhbCBsaSB7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgbWFyZ2luLXJpZ2h0OiAyJTsgbWFyZ2luLWJvdHRvbTogMiU7IH1cblxuLnRhYmxlMDEgdGQuc3ViLWxhYmVsIHAgeyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IHRleHQtYWxpZ246IGNlbnRlcjsgZm9udC1zaXplOiAxMnB4OyB3aWR0aDogNSU7IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDIzcHgpIHsgLnRhYmxlMDEgdGQuc3ViLWxhYmVsIHAgeyBkaXNwbGF5OiBibG9jazsgd2lkdGg6IGF1dG87IHRleHQtYWxpZ246IGxlZnQ7IH0gfVxuXG4udGFibGUwMSB0ZC5zdWItbGFiZWwgaW5wdXQsIC50YWJsZTAxIHRkLnN1Yi1sYWJlbCAuc2VsZWN0LXdyYXBwZXIgeyB3aWR0aDogNDQlOyB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7IC50YWJsZTAxIHRkLnN1Yi1sYWJlbCBpbnB1dCwgLnRhYmxlMDEgdGQuc3ViLWxhYmVsIC5zZWxlY3Qtd3JhcHBlciB7IHdpZHRoOiAxMDAlOyB9IH1cblxuLnRhYmxlMDEgdGQubWVzc2FnZSB7IGZvbnQtc2l6ZTogMTRweDsgZm9udC1zaXplOiAwLjg3NXJlbTsgY29sb3I6IHJlZDsgbWFyZ2luLXRvcDogMWVtOyBwYWRkaW5nOiAwIDFlbTsgfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU5OXB4KSB7IC50YWJsZTAxIHRkLm1lc3NhZ2UgeyBwYWRkaW5nOiAwIDVweDsgfSB9XG5cbi50YWJsZTAxIHRkOmxhc3QtY2hpbGQgeyBtYXJnaW4tYm90dG9tOiAyZW07IH1cblxuLnRhYmxlMDEgdGgsIC50YWJsZTAxIHRkIHsgcGFkZGluZzogMWVtOyB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyM3B4KSB7IC50YWJsZTAxIHRoLCAudGFibGUwMSB0ZCB7IHdpZHRoOiAxMDAlOyBkaXNwbGF5OiBibG9jazsgcGFkZGluZzogMiU7IH0gfVxuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqIEJlbG93IEZvciBFYWNoIFBhZ2UgKi9cbi8qKiogLyAqKiovXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zdHlsZS5zY3NzIiwiLyoqKiBSZXNldCBDU1MgKioqL1xuQGluY2x1ZGUgZ2xvYmFsLXJlc2V0O1xuXG4vLyDlhajjgabjga7opoHntKDjgpJib3JkZXItYm9444Gr44Oq44K744OD44OIXG4qIHtcbiAgQGluY2x1ZGUgYm94LXNpemluZyhib3JkZXItYm94KTtcbn1cblxuXG5pbnB1dCxcbnRleHRhcmVhIHtcbiAgQGluY2x1ZGUgcmVzZXQtZm9jdXM7XG59XG5cbmltZyB7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYmFzZS9fcmVzZXQuc2NzcyIsIi8vIEJhc2VkIG9uIFtFcmljIE1leWVyJ3MgcmVzZXQgMi4wXShodHRwOi8vbWV5ZXJ3ZWIuY29tL2VyaWMvdG9vbHMvY3NzL3Jlc2V0L2luZGV4Lmh0bWwpXG4vLyBHbG9iYWwgcmVzZXQgcnVsZXMuXG4vLyBGb3IgbW9yZSBzcGVjaWZpYyByZXNldHMsIHVzZSB0aGUgcmVzZXQgbWl4aW5zIHByb3ZpZGVkIGJlbG93XG5AbWl4aW4gZ2xvYmFsLXJlc2V0IHtcbiAgaHRtbCwgYm9keSwgZGl2LCBzcGFuLCBhcHBsZXQsIG9iamVjdCwgaWZyYW1lLFxuICBoMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsXG4gIGEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSxcbiAgZGVsLCBkZm4sIGVtLCBpbWcsIGlucywga2JkLCBxLCBzLCBzYW1wLFxuICBzbWFsbCwgc3RyaWtlLCBzdHJvbmcsIHN1Yiwgc3VwLCB0dCwgdmFyLFxuICBiLCB1LCBpLCBjZW50ZXIsXG4gIGRsLCBkdCwgZGQsIG9sLCB1bCwgbGksXG4gIGZpZWxkc2V0LCBmb3JtLCBsYWJlbCwgbGVnZW5kLFxuICB0YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCxcbiAgYXJ0aWNsZSwgYXNpZGUsIGNhbnZhcywgZGV0YWlscywgZW1iZWQsIFxuICBmaWd1cmUsIGZpZ2NhcHRpb24sIGZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIFxuICBtZW51LCBuYXYsIG91dHB1dCwgcnVieSwgc2VjdGlvbiwgc3VtbWFyeSxcbiAgdGltZSwgbWFyaywgYXVkaW8sIHZpZGVvIHtcbiAgICBAaW5jbHVkZSByZXNldC1ib3gtbW9kZWw7XG4gICAgQGluY2x1ZGUgcmVzZXQtZm9udDsgfVxuICAvLyBVbmxpa2UgRXJpYydzIG9yaWdpbmFsIHJlc2V0LCB3ZSByZXNldCB0aGUgaHRtbCBlbGVtZW50IHRvIGJlIGNvbXBhdGlibGVcbiAgLy8gd2l0aCB0aGUgdmVydGljYWwgcmh5dGhtIG1peGlucy5cbiAgaHRtbCB7XG4gICAgQGluY2x1ZGUgcmVzZXQtYm9keTsgfVxuICBvbCwgdWwge1xuICAgIEBpbmNsdWRlIHJlc2V0LWxpc3Qtc3R5bGU7IH1cbiAgdGFibGUge1xuICAgIEBpbmNsdWRlIHJlc2V0LXRhYmxlOyB9XG4gIGNhcHRpb24sIHRoLCB0ZCB7XG4gICAgQGluY2x1ZGUgcmVzZXQtdGFibGUtY2VsbDsgfVxuICBxLCBibG9ja3F1b3RlIHtcbiAgICBAaW5jbHVkZSByZXNldC1xdW90YXRpb247IH1cbiAgYSBpbWcge1xuICAgIEBpbmNsdWRlIHJlc2V0LWltYWdlLWFuY2hvci1ib3JkZXI7IH1cbiAgQGluY2x1ZGUgcmVzZXQtaHRtbDU7IH1cblxuLy8gUmVzZXQgYWxsIGVsZW1lbnRzIHdpdGhpbiBzb21lIHNlbGVjdG9yIHNjb3BlLiBUbyByZXNldCB0aGUgc2VsZWN0b3IgaXRzZWxmLFxuLy8gbWl4aW4gdGhlIGFwcHJvcHJpYXRlIHJlc2V0IG1peGluIGZvciB0aGF0IGVsZW1lbnQgdHlwZSBhcyB3ZWxsLiBUaGlzIGNvdWxkIGJlXG4vLyB1c2VmdWwgaWYgeW91IHdhbnQgdG8gc3R5bGUgYSBwYXJ0IG9mIHlvdXIgcGFnZSBpbiBhIGRyYW1hdGljYWxseSBkaWZmZXJlbnQgd2F5LlxuQG1peGluIG5lc3RlZC1yZXNldCB7XG4gIGRpdiwgc3BhbiwgYXBwbGV0LCBvYmplY3QsIGlmcmFtZSxcbiAgaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCwgYmxvY2txdW90ZSwgcHJlLFxuICBhLCBhYmJyLCBhY3JvbnltLCBhZGRyZXNzLCBiaWcsIGNpdGUsIGNvZGUsXG4gIGRlbCwgZGZuLCBlbSwgaW1nLCBpbnMsIGtiZCwgcSwgcywgc2FtcCxcbiAgc21hbGwsIHN0cmlrZSwgc3Ryb25nLCBzdWIsIHN1cCwgdHQsIHZhcixcbiAgYiwgdSwgaSwgY2VudGVyLFxuICBkbCwgZHQsIGRkLCBvbCwgdWwsIGxpLFxuICBmaWVsZHNldCwgZm9ybSwgbGFiZWwsIGxlZ2VuZCxcbiAgdGFibGUsIGNhcHRpb24sIHRib2R5LCB0Zm9vdCwgdGhlYWQsIHRyLCB0aCwgdGQsXG4gIGFydGljbGUsIGFzaWRlLCBjYW52YXMsIGRldGFpbHMsIGVtYmVkLCBcbiAgZmlndXJlLCBmaWdjYXB0aW9uLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLCBcbiAgbWVudSwgbmF2LCBvdXRwdXQsIHJ1YnksIHNlY3Rpb24sIHN1bW1hcnksXG4gIHRpbWUsIG1hcmssIGF1ZGlvLCB2aWRlbyB7XG4gICAgQGluY2x1ZGUgcmVzZXQtYm94LW1vZGVsO1xuICAgIEBpbmNsdWRlIHJlc2V0LWZvbnQ7IH1cbiAgdGFibGUge1xuICAgIEBpbmNsdWRlIHJlc2V0LXRhYmxlOyB9XG4gIGNhcHRpb24sIHRoLCB0ZCB7XG4gICAgQGluY2x1ZGUgcmVzZXQtdGFibGUtY2VsbDsgfVxuICBxLCBibG9ja3F1b3RlIHtcbiAgICBAaW5jbHVkZSByZXNldC1xdW90YXRpb247IH1cbiAgYSBpbWcge1xuICAgIEBpbmNsdWRlIHJlc2V0LWltYWdlLWFuY2hvci1ib3JkZXI7IH0gfVxuXG4vLyBSZXNldCB0aGUgYm94IG1vZGVsIG1lYXN1cmVtZW50cy5cbkBtaXhpbiByZXNldC1ib3gtbW9kZWwge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDsgfVxuXG4vLyBSZXNldCB0aGUgZm9udCBhbmQgdmVydGljYWwgYWxpZ25tZW50LlxuQG1peGluIHJlc2V0LWZvbnQge1xuICBmb250OiBpbmhlcml0O1xuICBmb250LXNpemU6IDEwMCU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG4vLyBSZXNldHMgdGhlIG91dGxpbmUgd2hlbiBmb2N1cy5cbi8vIEZvciBhY2Nlc3NpYmlsaXR5IHlvdSBuZWVkIHRvIGFwcGx5IHNvbWUgc3R5bGluZyBpbiBpdHMgcGxhY2UuXG5AbWl4aW4gcmVzZXQtZm9jdXMge1xuICBvdXRsaW5lOiAwOyB9XG5cbi8vIFJlc2V0IGEgYm9keSBlbGVtZW50LlxuQG1peGluIHJlc2V0LWJvZHkge1xuICBsaW5lLWhlaWdodDogMTsgfVxuXG4vLyBSZXNldCB0aGUgbGlzdCBzdHlsZSBvZiBhbiBlbGVtZW50LlxuQG1peGluIHJlc2V0LWxpc3Qtc3R5bGUge1xuICBsaXN0LXN0eWxlOiBub25lOyB9XG5cbi8vIFJlc2V0IGEgdGFibGVcbkBtaXhpbiByZXNldC10YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwOyB9XG5cbi8vIFJlc2V0IGEgdGFibGUgY2VsbCAoYHRoYCwgYHRkYClcbkBtaXhpbiByZXNldC10YWJsZS1jZWxsIHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuXG4vLyBSZXNldCBhIHF1b3RhdGlvbiAoYHFgLCBgYmxvY2txdW90ZWApXG5AbWl4aW4gcmVzZXQtcXVvdGF0aW9uIHtcbiAgcXVvdGVzOiBub25lO1xuICAmOmJlZm9yZSwgJjphZnRlciB7XG4gICAgY29udGVudDogXCJcIjsgXG4gICAgY29udGVudDogbm9uZTsgfSB9XG5cbi8vIFJlc2V0cyB0aGUgYm9yZGVyLlxuQG1peGluIHJlc2V0LWltYWdlLWFuY2hvci1ib3JkZXIge1xuICBib3JkZXI6IG5vbmU7IH1cblxuLy8gVW5yZWNvZ25pemVkIGVsZW1lbnRzIGFyZSBkaXNwbGF5ZWQgaW5saW5lLlxuLy8gVGhpcyByZXNldCBwcm92aWRlcyBhIGJhc2ljIHJlc2V0IGZvciBibG9jayBodG1sNSBlbGVtZW50c1xuLy8gc28gdGhleSBhcmUgcmVuZGVyZWQgY29ycmVjdGx5IGluIGJyb3dzZXJzIHRoYXQgZG9uJ3QgcmVjb2duaXplIHRoZW1cbi8vIGFuZCByZXNldCBpbiBicm93c2VycyB0aGF0IGhhdmUgZGVmYXVsdCBzdHlsZXMgZm9yIHRoZW0uXG5AbWl4aW4gcmVzZXQtaHRtbDUge1xuICAje2VsZW1lbnRzLW9mLXR5cGUoaHRtbDUtYmxvY2spfSB7XG4gICAgZGlzcGxheTogYmxvY2s7IH0gfVxuXG4vLyBSZXNldHMgdGhlIGRpc3BsYXkgb2YgaW5saW5lIGFuZCBibG9jayBlbGVtZW50cyB0byB0aGVpciBkZWZhdWx0IGRpc3BsYXlcbi8vIGFjY29yZGluZyB0byB0aGVpciB0YWcgdHlwZS4gRWxlbWVudHMgdGhhdCBoYXZlIGEgZGVmYXVsdCBkaXNwbGF5IHRoYXQgdmFyaWVzIGFjcm9zc1xuLy8gdmVyc2lvbnMgb2YgaHRtbCBvciBicm93c2VyIGFyZSBub3QgaGFuZGxlZCBoZXJlLCBidXQgdGhpcyBjb3ZlcnMgdGhlIDkwJSB1c2UgY2FzZS5cbi8vIFVzYWdlIEV4YW1wbGU6XG4vL1xuLy8gICAgIC8vIFR1cm4gb2ZmIHRoZSBkaXNwbGF5IGZvciBib3RoIG9mIHRoZXNlIGNsYXNzZXNcbi8vICAgICAudW5yZWdpc3RlcmVkLW9ubHksIC5yZWdpc3RlcmVkLW9ubHlcbi8vICAgICAgIGRpc3BsYXk6IG5vbmVcbi8vICAgICAvLyBOb3cgdHVybiBvbmx5IG9uZSBvZiB0aGVtIGJhY2sgb24gZGVwZW5kaW5nIG9uIHNvbWUgb3RoZXIgY29udGV4dC5cbi8vICAgICBib2R5LnJlZ2lzdGVyZWRcbi8vICAgICAgICtyZXNldC1kaXNwbGF5KFwiLnJlZ2lzdGVyZWQtb25seVwiKVxuLy8gICAgIGJvZHkudW5yZWdpc3RlcmVkXG4vLyAgICAgICArcmVzZXQtZGlzcGxheShcIi51bnJlZ2lzdGVyZWQtb25seVwiKVxuQG1peGluIHJlc2V0LWRpc3BsYXkoJHNlbGVjdG9yOiBcIlwiLCAkaW1wb3J0YW50OiBmYWxzZSkge1xuICAje2FwcGVuZC1zZWxlY3RvcihlbGVtZW50cy1vZi10eXBlKFwiaW5saW5lXCIpLCAkc2VsZWN0b3IpfSB7XG4gICAgQGlmICRpbXBvcnRhbnQge1xuICAgICAgZGlzcGxheTogaW5saW5lICFpbXBvcnRhbnQ7IH1cbiAgICBAZWxzZSB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmU7IH0gfVxuICAje2FwcGVuZC1zZWxlY3RvcihlbGVtZW50cy1vZi10eXBlKFwiYmxvY2tcIiksICRzZWxlY3Rvcil9IHtcbiAgICBAaWYgJGltcG9ydGFudCB7XG4gICAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50OyB9XG4gICAgQGVsc2Uge1xuICAgICAgZGlzcGxheTogYmxvY2s7IH0gfSB9XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wYXNzLW1peGlucy9jb21wYXNzL3Jlc2V0L191dGlsaXRpZXMuc2NzcyIsIkBpbXBvcnQgXCIuLi9zdXBwb3J0XCI7XG5cbi8vIFRoaXMgbWl4aW4gcHJvdmlkZXMgYmFzaWMgc3VwcG9ydCBmb3IgQ1NTMyBwcm9wZXJ0aWVzIGFuZFxuLy8gdGhlaXIgY29ycmVzcG9uZGluZyBleHBlcmltZW50YWwgQ1NTMiBwcm9wZXJ0aWVzIHdoZW5cbi8vIHRoZSBpbXBsZW1lbnRhdGlvbnMgYXJlIGlkZW50aWNhbCBleGNlcHQgZm9yIHRoZSBwcm9wZXJ0eVxuLy8gcHJlZml4LlxuQG1peGluIGV4cGVyaW1lbnRhbCgkcHJvcGVydHksICR2YWx1ZSxcbiAgJG1veiAgICAgIDogJGV4cGVyaW1lbnRhbC1zdXBwb3J0LWZvci1tb3ppbGxhLFxuICAkd2Via2l0ICAgOiAkZXhwZXJpbWVudGFsLXN1cHBvcnQtZm9yLXdlYmtpdCxcbiAgJG8gICAgICAgIDogJGV4cGVyaW1lbnRhbC1zdXBwb3J0LWZvci1vcGVyYSxcbiAgJG1zICAgICAgIDogJGV4cGVyaW1lbnRhbC1zdXBwb3J0LWZvci1taWNyb3NvZnQsXG4gICRraHRtbCAgICA6ICRleHBlcmltZW50YWwtc3VwcG9ydC1mb3Ita2h0bWwsXG4gICRvZmZpY2lhbCA6IHRydWVcbikge1xuICBAaWYgJHdlYmtpdCAgYW5kICRleHBlcmltZW50YWwtc3VwcG9ydC1mb3Itd2Via2l0ICAgIHsgLXdlYmtpdC0jeyRwcm9wZXJ0eX0gOiAkdmFsdWU7IH1cbiAgQGlmICRraHRtbCAgIGFuZCAkZXhwZXJpbWVudGFsLXN1cHBvcnQtZm9yLWtodG1sICAgICB7ICAta2h0bWwtI3skcHJvcGVydHl9IDogJHZhbHVlOyB9XG4gIEBpZiAkbW96ICAgICBhbmQgJGV4cGVyaW1lbnRhbC1zdXBwb3J0LWZvci1tb3ppbGxhICAgeyAgICAtbW96LSN7JHByb3BlcnR5fSA6ICR2YWx1ZTsgfVxuICBAaWYgJG1zICAgICAgYW5kICRleHBlcmltZW50YWwtc3VwcG9ydC1mb3ItbWljcm9zb2Z0IHsgICAgIC1tcy0jeyRwcm9wZXJ0eX0gOiAkdmFsdWU7IH1cbiAgQGlmICRvICAgICAgIGFuZCAkZXhwZXJpbWVudGFsLXN1cHBvcnQtZm9yLW9wZXJhICAgICB7ICAgICAgLW8tI3skcHJvcGVydHl9IDogJHZhbHVlOyB9XG4gIEBpZiAkb2ZmaWNpYWwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyAgICAgICAgICN7JHByb3BlcnR5fSA6ICR2YWx1ZTsgfVxufVxuXG4vLyBTYW1lIGFzIGV4cGVyaW1lbnRhbCgpLCBidXQgZm9yIGNhc2VzIHdoZW4gdGhlIHByb3BlcnR5IGlzIHRoZSBzYW1lIGFuZCB0aGUgdmFsdWUgaXMgdmVuZG9yaXplZFxuQG1peGluIGV4cGVyaW1lbnRhbC12YWx1ZSgkcHJvcGVydHksICR2YWx1ZSxcbiAgJG1veiAgICAgIDogJGV4cGVyaW1lbnRhbC1zdXBwb3J0LWZvci1tb3ppbGxhLFxuICAkd2Via2l0ICAgOiAkZXhwZXJpbWVudGFsLXN1cHBvcnQtZm9yLXdlYmtpdCxcbiAgJG8gICAgICAgIDogJGV4cGVyaW1lbnRhbC1zdXBwb3J0LWZvci1vcGVyYSxcbiAgJG1zICAgICAgIDogJGV4cGVyaW1lbnRhbC1zdXBwb3J0LWZvci1taWNyb3NvZnQsXG4gICRraHRtbCAgICA6ICRleHBlcmltZW50YWwtc3VwcG9ydC1mb3Ita2h0bWwsXG4gICRvZmZpY2lhbCA6IHRydWVcbikge1xuICBAaWYgJHdlYmtpdCAgYW5kICRleHBlcmltZW50YWwtc3VwcG9ydC1mb3Itd2Via2l0ICAgIHsgI3skcHJvcGVydHl9IDogLXdlYmtpdC0jeyR2YWx1ZX07IH1cbiAgQGlmICRraHRtbCAgIGFuZCAkZXhwZXJpbWVudGFsLXN1cHBvcnQtZm9yLWtodG1sICAgICB7ICN7JHByb3BlcnR5fSA6ICAta2h0bWwtI3skdmFsdWV9OyB9XG4gIEBpZiAkbW96ICAgICBhbmQgJGV4cGVyaW1lbnRhbC1zdXBwb3J0LWZvci1tb3ppbGxhICAgeyAjeyRwcm9wZXJ0eX0gOiAgICAtbW96LSN7JHZhbHVlfTsgfVxuICBAaWYgJG1zICAgICAgYW5kICRleHBlcmltZW50YWwtc3VwcG9ydC1mb3ItbWljcm9zb2Z0IHsgI3skcHJvcGVydHl9IDogICAgIC1tcy0jeyR2YWx1ZX07IH1cbiAgQGlmICRvICAgICAgIGFuZCAkZXhwZXJpbWVudGFsLXN1cHBvcnQtZm9yLW9wZXJhICAgICB7ICN7JHByb3BlcnR5fSA6ICAgICAgLW8tI3skdmFsdWV9OyB9XG4gIEBpZiAkb2ZmaWNpYWwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyAjeyRwcm9wZXJ0eX0gOiAgICAgICAgICN7JHZhbHVlfTsgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vY29tcGFzcy1taXhpbnMvY29tcGFzcy9jc3MzL19zaGFyZWQuc2NzcyIsIiVjbGVhcmZpeHtcbiAgem9vbToxO1xuICAmOmFmdGVye1xuICAgIGNsZWFyOiBib3RoO1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG5cbiVob3ZlciB7XG4gIEBpbmNsdWRlIGJyZWFrLXBvaW50KHBjKSB7XG4gICAgQGluY2x1ZGUgdHJhbnNpdGlvbihhbGwgLjJzIGVhc2UtaW4pO1xuICAgICY6aG92ZXIge1xuICAgICAgQGluY2x1ZGUgb3BhY2l0eSguNyk7XG4gICAgfVxuICB9XG59XG5cbi8vIOODhuOCreOCueODiOODquODs+OCr+OCueOCv+OCpOODq1xuXG4vLyDkuIrjgYvjgonjg5Xjgqfjg7zjg4lcbi51bmRlcmxpbmUtZmFkZS10b3AtbGluayB7XG4gIEBpbmNsdWRlIGhvdmVyLXVuZGVybGluZSgnZmFkZScsICd0b3AnKTtcbn1cbi8vIOS4i+OBi+OCieODleOCp+ODvOODiVxuLnVuZGVybGluZS1mYWRlLWJvdHRvbS1saW5rIHtcbiAgQGluY2x1ZGUgaG92ZXItdW5kZXJsaW5lKCdmYWRlJywgJ2JvdHRvbScpO1xufVxuLy8g5bem44GL44KJ5Ly444Gz44KLXG4udW5kZXJsaW5lLXNsaWRlLWxlZnQtcmlnaHQtbGluayB7XG4gIEBpbmNsdWRlIGhvdmVyLXVuZGVybGluZSgnc2xpZGUnLCAnbGVmdC1yaWdodCcpO1xufVxuLy8g5Y+z44GL44KJ5Ly444Gz44KLXG4udW5kZXJsaW5lLXNsaWRlLXJpZ2h0LWxlZnQtbGluayB7XG4gIEBpbmNsdWRlIGhvdmVyLXVuZGVybGluZSgnc2xpZGUnLCAncmlnaHQtbGVmdCcpO1xufVxuXG5cbi8vIOWkqeWcsOS4reWkruaPg+OBiFxuJXZlcnRpY2FsbHktY2VudGVyZWQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuXG4lZmZnIHtcbiAgZm9udC1mYW1pbHk6ICdOb3RvIFNhbnMgSmFwYW5lc2UnLCAn5ri444K044K344OD44KvJywgWXVHb3RoaWMsICfjg5Ljg6njgq7jg47op5LjgrQgUHJvIFczJywgJ0hpcmFnaW5vIEtha3UgR290aGljIFBybycsICfjg6HjgqTjg6rjgqonLCBNZWlyeW8sICfvvK3vvLMg77yw44K044K344OD44KvJywgc2Fucy1zZXJpZjtcbn1cblxuJWZmbSB7XG4gIGZvbnQtZmFtaWx5OiBZdSBNaW5jaG8sICfmuLjmmI7mnJ0nLCAn44OS44Op44Ku44OO5piO5pydIFByb04gVzYnLCAnSGlyYU1pblByb04tVzYnLCAnSEfmmI7mnJ1FJywgJ++8re+8syDvvLDmmI7mnJ0nLCAnTVMgUE1pbmNobycsICdNUyDmmI7mnJ0nLCBzZXJpZjtcbn1cblxuLnRhYyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnRhbCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbi50YXIge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9iYXNlL19leHRlbmRzLnNjc3MiLCIvLyAja2V5ZnJhbWVz44Gu55Sf5oiQXG5AbWl4aW4ga2V5ZnJhbWVzKCRhbmltYXRpb24tbmFtZTogYW5pbWF0aW9uKSB7XG4gICAgQC13ZWJraXQta2V5ZnJhbWVzICN7JGFuaW1hdGlvbi1uYW1lfSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgICBALW1vei1rZXlmcmFtZXMgI3skYW5pbWF0aW9uLW5hbWV9IHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICAgIEBrZXlmcmFtZXMgI3skYW5pbWF0aW9uLW5hbWV9IHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfVxufVxuXG4vLyAj44Ki44OL44Oh44O844K344On44Oz44Gu55Sf5oiQXG5AbWl4aW4gYW5pbWF0aW9uKCRhbmltYXRpb24tbmFtZSkge1xuICAgIC13ZWJraXQtYW5pbWF0aW9uOiAkYW5pbWF0aW9uLW5hbWU7XG4gICAgLW1vei1hbmltYXRpb246ICRhbmltYXRpb24tbmFtZTtcbiAgICBhbmltYXRpb246ICRhbmltYXRpb24tbmFtZTtcbiAgICAtd2Via2l0LWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG4gICAgLW1vei1hbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xuICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XG59XG5cblxuLy8gI+ODluODrOODvOOCr+ODneOCpOODs+ODiFxuQG1peGluIGJyZWFrLXBvaW50KCRwb2ludCkge1xuICAgIEBpZiAkcG9pbnQgPT0gcGMge1xuICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAgICAgQGNvbnRlbnQ7XG4gICAgICAgIH1cbiAgICB9IEBlbHNlIGlmICRwb2ludCA9PSB0YWJsZXQge1xuICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAgICAgICAgICAgQGNvbnRlbnQ7XG4gICAgICAgIH1cbiAgICB9IEBlbHNlIGlmICRwb2ludCA9PSBtb2JpbGUge1xuICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU5OXB4KSB7XG4gICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8gI+aTrOS8vOimgee0oFxuQG1peGluIHBzZXVkby1lbGVtZW50KCRjb250ZW50OiAnJywgJHBvc2l0aW9uOiBhYnNvbHV0ZSwgJGRpc3BsYXk6IGJsb2NrKSB7XG4gICAgcG9zaXRpb246ICRwb3NpdGlvbjtcbiAgICBkaXNwbGF5OiAkZGlzcGxheTtcbiAgICBjb250ZW50OiAkY29udGVudDtcbn1cblxuQGZ1bmN0aW9uIGNvbnZlcnQtcHgtdG8tcmVtKCRmb250U2l6ZSkge1xuXHRAcmV0dXJuICgkZm9udFNpemUgLyAkYmFzZS1mb250LXNpemUpICsgcmVtO1xufVxuXG4vLyAjcHjjgpJyZW3jgavlpInmj5tcbkBtaXhpbiBmb250LXNpemUtcHgtdG8tcmVtKCRmb250U2l6ZSkge1xuICAgIGZvbnQtc2l6ZTogJGZvbnRTaXplO1xuICAgIGZvbnQtc2l6ZTogY29udmVydC1weC10by1yZW0oJGZvbnRTaXplKTtcbn1cblxuLy8gI+ODhuOCreOCueODiOODquODs+OCr+ODm+ODkOODvOOCouODi+ODoeODvOOCt+ODp+ODs1xuQG1peGluIGhvdmVyLXVuZGVybGluZSgkdHlwZTogZmFkZSwgJGRpcjogbnVsbCwgJHdlaWdodDogMXB4LCAkY29sb3I6ICNjY2MpIHtcbiAgICBAaWYgJGRpciA9PSBudWxsIHtcbiAgICAgICAgQGlmICR0eXBlID09IGZhZGUge1xuICAgICAgICAgICAgJGRpcjogJ3RvcCc7XG4gICAgICAgIH0gQGVsc2UgaWYgJHR5cGUgPT0gc2xpZGUge1xuICAgICAgICAgICAgJGRpcjogJ2NlbnRlcic7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgdHJhbnNpdGlvbjogYWxsIC41cyBlYXNlO1xuICAgICY6OmFmdGVyIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogJHdlaWdodDtcbiAgICAgICAgYmFja2dyb3VuZDogJGNvbG9yO1xuICAgICAgICBAaWYgJHR5cGUgPT0gZmFkZSB7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiAuM3M7XG4gICAgICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgICAgICAgICAgQGlmICRkaXIgPT0gYm90dG9tIHtcbiAgICAgICAgICAgICAgICBib3R0b206ICR3ZWlnaHQgKiAtNDtcbiAgICAgICAgICAgIH0gQGVsc2Uge1xuICAgICAgICAgICAgICAgIGJvdHRvbTogJHdlaWdodDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBAZWxzZSBpZiAkdHlwZSA9PSBzbGlkZSB7XG4gICAgICAgICAgICBib3R0b206ICR3ZWlnaHQgKiAtMjtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMCwgMSk7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjNzO1xuICAgICAgICAgICAgQGlmICRkaXIgPT0gbGVmdC1yaWdodCBvciAkZGlyID09IHJpZ2h0LWluLWxlZnQge1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IGxlZnQgdG9wO1xuICAgICAgICAgICAgfSBAZWxzZSBpZiAkZGlyID09IHJpZ2h0LWxlZnQgb3IgJGRpciA9PSBsZWZ0LWluLXJpZ2h0IHtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiByaWdodCB0b3A7XG4gICAgICAgICAgICB9IEBlbHNlIHtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgdG9wO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgICY6aG92ZXI6OmFmdGVyIHtcbiAgICAgICAgQGlmICR0eXBlID09IGZhZGUge1xuICAgICAgICAgICAgYm90dG9tOiAkd2VpZ2h0ICogLTI7XG4gICAgICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgICAgICAgfSBAZWxzZSBpZiAkdHlwZSA9PSBzbGlkZSB7XG4gICAgICAgICAgICBAaWYgJGRpciA9PSBsZWZ0LWluLXJpZ2h0IHtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0IHRvcDtcbiAgICAgICAgICAgIH0gQGVsc2UgaWYgJGRpciA9PSByaWdodC1pbi1sZWZ0IHtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiByaWdodCB0b3A7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEsIDEpO1xuICAgICAgICB9XG4gICAgfVxuICAgICY6aG92ZXIge1xuICAgICAgICBvcGFjaXR5OiAuNjtcbiAgICB9XG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYmFzZS9fbWl4aW5zLnNjc3MiLCJAaW1wb3J0IFwic2hhcmVkXCI7XG5cbi8vIENTUyBUcmFuc2l0aW9uc1xuLy8gQ3VycmVudGx5IG9ubHkgd29ya3MgaW4gV2Via2l0LlxuLy9cbi8vICogZXhwZWN0ZWQgaW4gQ1NTMywgRmlyZUZveCAzLjYvNyBhbmQgT3BlcmEgUHJlc3RvIDIuM1xuLy8gKiBXZSdsbCBiZSBwcmVwYXJlZC5cbi8vXG4vLyBJbmNsdWRpbmcgdGhpcyBzdWJtb2R1bGUgc2V0cyBmb2xsb3dpbmcgZGVmYXVsdHMgZm9yIHRoZSBtaXhpbnM6XG4vL1xuLy8gICAgICRkZWZhdWx0LXRyYW5zaXRpb24tcHJvcGVydHkgOiBhbGxcbi8vICAgICAkZGVmYXVsdC10cmFuc2l0aW9uLWR1cmF0aW9uIDogMXNcbi8vICAgICAkZGVmYXVsdC10cmFuc2l0aW9uLWZ1bmN0aW9uIDogZmFsc2Vcbi8vICAgICAkZGVmYXVsdC10cmFuc2l0aW9uLWRlbGF5ICAgIDogZmFsc2Vcbi8vXG4vLyBPdmVycmlkZSB0aGVtIGlmIHlvdSBsaWtlLiBUaW1pbmctZnVuY3Rpb24gYW5kIGRlbGF5IGFyZSBzZXQgdG8gZmFsc2UgZm9yIGJyb3dzZXIgZGVmYXVsdHMgKGVhc2UsIDBzKS5cblxuJGRlZmF1bHQtdHJhbnNpdGlvbi1wcm9wZXJ0eTogYWxsICFkZWZhdWx0O1xuXG4kZGVmYXVsdC10cmFuc2l0aW9uLWR1cmF0aW9uOiAxcyAhZGVmYXVsdDtcblxuJGRlZmF1bHQtdHJhbnNpdGlvbi1mdW5jdGlvbjogZmFsc2UgIWRlZmF1bHQ7XG5cbiRkZWZhdWx0LXRyYW5zaXRpb24tZGVsYXk6IGZhbHNlICFkZWZhdWx0O1xuXG4kdHJhbnNpdGlvbmFibGUtcHJlZml4ZWQtdmFsdWVzOiB0cmFuc2Zvcm0sIHRyYW5zZm9ybS1vcmlnaW4gIWRlZmF1bHQ7XG5cbi8vIE9uZSBvciBtb3JlIHByb3BlcnRpZXMgdG8gdHJhbnNpdGlvblxuLy9cbi8vICogZm9yIG11bHRpcGxlLCB1c2UgYSBjb21tYS1kZWxpbWl0ZWQgbGlzdFxuLy8gKiBhbHNvIGFjY2VwdHMgXCJhbGxcIiBvciBcIm5vbmVcIlxuXG5AbWl4aW4gdHJhbnNpdGlvbi1wcm9wZXJ0eSgkcHJvcGVydHktMTogJGRlZmF1bHQtdHJhbnNpdGlvbi1wcm9wZXJ0eSxcbiAgJHByb3BlcnR5LTIgOiBmYWxzZSxcbiAgJHByb3BlcnR5LTMgOiBmYWxzZSxcbiAgJHByb3BlcnR5LTQgOiBmYWxzZSxcbiAgJHByb3BlcnR5LTUgOiBmYWxzZSxcbiAgJHByb3BlcnR5LTYgOiBmYWxzZSxcbiAgJHByb3BlcnR5LTcgOiBmYWxzZSxcbiAgJHByb3BlcnR5LTggOiBmYWxzZSxcbiAgJHByb3BlcnR5LTkgOiBmYWxzZSxcbiAgJHByb3BlcnR5LTEwOiBmYWxzZVxuKSB7XG4gIEBpZiB0eXBlLW9mKCRwcm9wZXJ0eS0xKSA9PSBzdHJpbmcgeyAkcHJvcGVydHktMTogdW5xdW90ZSgkcHJvcGVydHktMSk7IH1cbiAgJHByb3BlcnRpZXM6IGNvbXBhY3QoJHByb3BlcnR5LTEsICRwcm9wZXJ0eS0yLCAkcHJvcGVydHktMywgJHByb3BlcnR5LTQsICRwcm9wZXJ0eS01LCAkcHJvcGVydHktNiwgJHByb3BlcnR5LTcsICRwcm9wZXJ0eS04LCAkcHJvcGVydHktOSwgJHByb3BlcnR5LTEwKTtcbiAgQGlmICRleHBlcmltZW50YWwtc3VwcG9ydC1mb3Itd2Via2l0ICAgIHsgICAgICAgLXdlYmtpdC10cmFuc2l0aW9uLXByb3BlcnR5IDogcHJlZml4ZWQtZm9yLXRyYW5zaXRpb24oLXdlYmtpdCwgJHByb3BlcnRpZXMpOyB9XG4gIEBpZiAkZXhwZXJpbWVudGFsLXN1cHBvcnQtZm9yLW1vemlsbGEgICB7ICAgICAgICAgIC1tb3otdHJhbnNpdGlvbi1wcm9wZXJ0eSA6IHByZWZpeGVkLWZvci10cmFuc2l0aW9uKC1tb3osICAgICRwcm9wZXJ0aWVzKTsgfVxuICBAaWYgJGV4cGVyaW1lbnRhbC1zdXBwb3J0LWZvci1vcGVyYSAgICAgeyAgICAgICAgICAgIC1vLXRyYW5zaXRpb24tcHJvcGVydHkgOiBwcmVmaXhlZC1mb3ItdHJhbnNpdGlvbigtbywgICAgICAkcHJvcGVydGllcyk7IH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uLXByb3BlcnR5IDogJHByb3BlcnRpZXM7XG59XG5cbi8vIE9uZSBvciBtb3JlIGR1cmF0aW9ucyBpbiBzZWNvbmRzXG4vL1xuLy8gKiBmb3IgbXVsdGlwbGUsIHVzZSBhIGNvbW1hLWRlbGltaXRlZCBsaXN0XG4vLyAqIHRoZXNlIGR1cmF0aW9ucyB3aWxsIGFmZmVjdCB0aGUgcHJvcGVydGllcyBpbiB0aGUgc2FtZSBsaXN0IHBvc2l0aW9uXG5cbkBtaXhpbiB0cmFuc2l0aW9uLWR1cmF0aW9uKCRkdXJhdGlvbi0xOiAkZGVmYXVsdC10cmFuc2l0aW9uLWR1cmF0aW9uLFxuICAkZHVyYXRpb24tMiA6IGZhbHNlLFxuICAkZHVyYXRpb24tMyA6IGZhbHNlLFxuICAkZHVyYXRpb24tNCA6IGZhbHNlLFxuICAkZHVyYXRpb24tNSA6IGZhbHNlLFxuICAkZHVyYXRpb24tNiA6IGZhbHNlLFxuICAkZHVyYXRpb24tNyA6IGZhbHNlLFxuICAkZHVyYXRpb24tOCA6IGZhbHNlLFxuICAkZHVyYXRpb24tOSA6IGZhbHNlLFxuICAkZHVyYXRpb24tMTA6IGZhbHNlXG4pIHtcbiAgQGlmIHR5cGUtb2YoJGR1cmF0aW9uLTEpID09IHN0cmluZyB7ICRkdXJhdGlvbi0xOiB1bnF1b3RlKCRkdXJhdGlvbi0xKTsgfVxuICAkZHVyYXRpb25zOiBjb21wYWN0KCRkdXJhdGlvbi0xLCAkZHVyYXRpb24tMiwgJGR1cmF0aW9uLTMsICRkdXJhdGlvbi00LCAkZHVyYXRpb24tNSwgJGR1cmF0aW9uLTYsICRkdXJhdGlvbi03LCAkZHVyYXRpb24tOCwgJGR1cmF0aW9uLTksICRkdXJhdGlvbi0xMCk7XG4gIEBpbmNsdWRlIGV4cGVyaW1lbnRhbCh0cmFuc2l0aW9uLWR1cmF0aW9uLCAkZHVyYXRpb25zLFxuICAgIC1tb3osIC13ZWJraXQsIC1vLCBub3QoLW1zKSwgbm90KC1raHRtbCksIG9mZmljaWFsXG4gICk7XG59XG5cbi8vIE9uZSBvciBtb3JlIHRpbWluZyBmdW5jdGlvbnNcbi8vXG4vLyAqIFsgZWFzZSB8IGxpbmVhciB8IGVhc2UtaW4gfCBlYXNlLW91dCB8IGVhc2UtaW4tb3V0IHwgY3ViaWMtYmV6aWVyKHgxLCB5MSwgeDIsIHkyKV1cbi8vICogRm9yIG11bHRpcGxlLCB1c2UgYSBjb21tYS1kZWxpbWl0ZWQgbGlzdFxuLy8gKiBUaGVzZSBmdW5jdGlvbnMgd2lsbCBlZmZlY3QgdGhlIHByb3BlcnRpZXMgaW4gdGhlIHNhbWUgbGlzdCBwb3NpdGlvblxuXG5AbWl4aW4gdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb24oJGZ1bmN0aW9uLTE6ICRkZWZhdWx0LXRyYW5zaXRpb24tZnVuY3Rpb24sXG4gICRmdW5jdGlvbi0yIDogZmFsc2UsXG4gICRmdW5jdGlvbi0zIDogZmFsc2UsXG4gICRmdW5jdGlvbi00IDogZmFsc2UsXG4gICRmdW5jdGlvbi01IDogZmFsc2UsXG4gICRmdW5jdGlvbi02IDogZmFsc2UsXG4gICRmdW5jdGlvbi03IDogZmFsc2UsXG4gICRmdW5jdGlvbi04IDogZmFsc2UsXG4gICRmdW5jdGlvbi05IDogZmFsc2UsXG4gICRmdW5jdGlvbi0xMDogZmFsc2Vcbikge1xuICAkZnVuY3Rpb24tMTogdW5xdW90ZSgkZnVuY3Rpb24tMSk7XG4gICRmdW5jdGlvbnM6IGNvbXBhY3QoJGZ1bmN0aW9uLTEsICRmdW5jdGlvbi0yLCAkZnVuY3Rpb24tMywgJGZ1bmN0aW9uLTQsICRmdW5jdGlvbi01LCAkZnVuY3Rpb24tNiwgJGZ1bmN0aW9uLTcsICRmdW5jdGlvbi04LCAkZnVuY3Rpb24tOSwgJGZ1bmN0aW9uLTEwKTtcbiAgQGluY2x1ZGUgZXhwZXJpbWVudGFsKHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uLCAkZnVuY3Rpb25zLFxuICAgIC1tb3osIC13ZWJraXQsIC1vLCBub3QoLW1zKSwgbm90KC1raHRtbCksIG9mZmljaWFsXG4gICk7XG59XG5cbi8vIE9uZSBvciBtb3JlIHRyYW5zaXRpb24tZGVsYXlzIGluIHNlY29uZHNcbi8vXG4vLyAqIGZvciBtdWx0aXBsZSwgdXNlIGEgY29tbWEtZGVsaW1pdGVkIGxpc3Rcbi8vICogdGhlc2UgZGVsYXlzIHdpbGwgZWZmZWN0IHRoZSBwcm9wZXJ0aWVzIGluIHRoZSBzYW1lIGxpc3QgcG9zaXRpb25cblxuQG1peGluIHRyYW5zaXRpb24tZGVsYXkoJGRlbGF5LTE6ICRkZWZhdWx0LXRyYW5zaXRpb24tZGVsYXksXG4gICRkZWxheS0yIDogZmFsc2UsXG4gICRkZWxheS0zIDogZmFsc2UsXG4gICRkZWxheS00IDogZmFsc2UsXG4gICRkZWxheS01IDogZmFsc2UsXG4gICRkZWxheS02IDogZmFsc2UsXG4gICRkZWxheS03IDogZmFsc2UsXG4gICRkZWxheS04IDogZmFsc2UsXG4gICRkZWxheS05IDogZmFsc2UsXG4gICRkZWxheS0xMDogZmFsc2Vcbikge1xuICBAaWYgdHlwZS1vZigkZGVsYXktMSkgPT0gc3RyaW5nIHsgJGRlbGF5LTE6IHVucXVvdGUoJGRlbGF5LTEpOyB9XG4gICRkZWxheXM6IGNvbXBhY3QoJGRlbGF5LTEsICRkZWxheS0yLCAkZGVsYXktMywgJGRlbGF5LTQsICRkZWxheS01LCAkZGVsYXktNiwgJGRlbGF5LTcsICRkZWxheS04LCAkZGVsYXktOSwgJGRlbGF5LTEwKTtcbiAgQGluY2x1ZGUgZXhwZXJpbWVudGFsKHRyYW5zaXRpb24tZGVsYXksICRkZWxheXMsXG4gICAgLW1veiwgLXdlYmtpdCwgLW8sIG5vdCgtbXMpLCBub3QoLWtodG1sKSwgb2ZmaWNpYWxcbiAgKTtcbn1cblxuLy8gVHJhbnNpdGlvbiBhbGwtaW4tb25lIHNob3J0aGFuZFxuXG5AbWl4aW4gc2luZ2xlLXRyYW5zaXRpb24oXG4gICRwcm9wZXJ0eTogJGRlZmF1bHQtdHJhbnNpdGlvbi1wcm9wZXJ0eSxcbiAgJGR1cmF0aW9uOiAkZGVmYXVsdC10cmFuc2l0aW9uLWR1cmF0aW9uLFxuICAkZnVuY3Rpb246ICRkZWZhdWx0LXRyYW5zaXRpb24tZnVuY3Rpb24sXG4gICRkZWxheTogJGRlZmF1bHQtdHJhbnNpdGlvbi1kZWxheVxuKSB7XG4gIEBpbmNsdWRlIHRyYW5zaXRpb24oY29tcGFjdCgkcHJvcGVydHkgJGR1cmF0aW9uICRmdW5jdGlvbiAkZGVsYXkpKTtcbn1cblxuQG1peGluIHRyYW5zaXRpb24oXG4gICR0cmFuc2l0aW9uLTEgOiBkZWZhdWx0LFxuICAkdHJhbnNpdGlvbi0yIDogZmFsc2UsXG4gICR0cmFuc2l0aW9uLTMgOiBmYWxzZSxcbiAgJHRyYW5zaXRpb24tNCA6IGZhbHNlLFxuICAkdHJhbnNpdGlvbi01IDogZmFsc2UsXG4gICR0cmFuc2l0aW9uLTYgOiBmYWxzZSxcbiAgJHRyYW5zaXRpb24tNyA6IGZhbHNlLFxuICAkdHJhbnNpdGlvbi04IDogZmFsc2UsXG4gICR0cmFuc2l0aW9uLTkgOiBmYWxzZSxcbiAgJHRyYW5zaXRpb24tMTA6IGZhbHNlXG4pIHtcbiAgQGlmICR0cmFuc2l0aW9uLTEgPT0gZGVmYXVsdCB7XG4gICAgJHRyYW5zaXRpb24tMSA6IGNvbXBhY3QoJGRlZmF1bHQtdHJhbnNpdGlvbi1wcm9wZXJ0eSAkZGVmYXVsdC10cmFuc2l0aW9uLWR1cmF0aW9uICRkZWZhdWx0LXRyYW5zaXRpb24tZnVuY3Rpb24gJGRlZmF1bHQtdHJhbnNpdGlvbi1kZWxheSk7XG4gIH1cbiAgJHRyYW5zaXRpb25zOiBmYWxzZTtcbiAgQGlmIHR5cGUtb2YoJHRyYW5zaXRpb24tMSkgPT0gbGlzdCBhbmQgdHlwZS1vZihudGgoJHRyYW5zaXRpb24tMSwxKSkgPT0gbGlzdCB7XG4gICAgJHRyYW5zaXRpb25zOiBqb2luKCR0cmFuc2l0aW9uLTEsIGNvbXBhY3QoJHRyYW5zaXRpb24tMiwgJHRyYW5zaXRpb24tMywgJHRyYW5zaXRpb24tNCwgJHRyYW5zaXRpb24tNSwgJHRyYW5zaXRpb24tNiwgJHRyYW5zaXRpb24tNywgJHRyYW5zaXRpb24tOCwgJHRyYW5zaXRpb24tOSwgJHRyYW5zaXRpb24tMTApLCBjb21tYSk7XG4gIH0gQGVsc2Uge1xuICAgICR0cmFuc2l0aW9ucyA6IGNvbXBhY3QoJHRyYW5zaXRpb24tMSwgJHRyYW5zaXRpb24tMiwgJHRyYW5zaXRpb24tMywgJHRyYW5zaXRpb24tNCwgJHRyYW5zaXRpb24tNSwgJHRyYW5zaXRpb24tNiwgJHRyYW5zaXRpb24tNywgJHRyYW5zaXRpb24tOCwgJHRyYW5zaXRpb24tOSwgJHRyYW5zaXRpb24tMTApO1xuICB9XG4gICRkZWxheXM6IGNvbW1hLWxpc3QoKTtcbiAgJGhhcy1kZWxheXM6IGZhbHNlO1xuICAkd2Via2l0LXZhbHVlOiBjb21tYS1saXN0KCk7XG4gICRtb3otdmFsdWU6IGNvbW1hLWxpc3QoKTtcbiAgJG8tdmFsdWU6IGNvbW1hLWxpc3QoKTtcblxuICAvLyBUaGlzIGJsb2NrIGNhbiBiZSBtYWRlIGNvbnNpZGVyYWJseSBzaW1wbGVyIGF0IHRoZSBwb2ludCBpbiB0aW1lIHRoYXRcbiAgLy8gd2Ugbm8gbG9uZ2VyIG5lZWQgdG8gZGVhbCB3aXRoIHRoZSBkaWZmZXJlbmNlcyBpbiBob3cgZGVsYXlzIGFyZSB0cmVhdGVkLlxuICBAZWFjaCAkdHJhbnNpdGlvbiBpbiAkdHJhbnNpdGlvbnMge1xuICAgIC8vIEV4dHJhY3QgdGhlIHZhbHVlcyBmcm9tIHRoZSBsaXN0XG4gICAgLy8gKHRoaXMgd291bGQgYmUgY2xlYW5lciBpZiBudGggdG9vayBhIDNyZCBhcmd1bWVudCB0byBwcm92aWRlIGEgZGVmYXVsdCB2YWx1ZSkuXG4gICAgJHByb3BlcnR5OiBudGgoJHRyYW5zaXRpb24sIDEpO1xuICAgICRkdXJhdGlvbjogZmFsc2U7XG4gICAgJHRpbWluZy1mdW5jdGlvbjogZmFsc2U7XG4gICAgJGRlbGF5OiBmYWxzZTtcbiAgICBAaWYgbGVuZ3RoKCR0cmFuc2l0aW9uKSA+IDEgeyAkZHVyYXRpb246ICAgICAgICBudGgoJHRyYW5zaXRpb24sIDIpOyB9XG4gICAgQGlmIGxlbmd0aCgkdHJhbnNpdGlvbikgPiAyIHsgJHRpbWluZy1mdW5jdGlvbjogbnRoKCR0cmFuc2l0aW9uLCAzKTsgfVxuICAgIEBpZiBsZW5ndGgoJHRyYW5zaXRpb24pID4gMyB7ICRkZWxheTogICAgICAgICAgIG50aCgkdHJhbnNpdGlvbiwgNCk7ICRoYXMtZGVsYXlzOiB0cnVlOyB9XG5cbiAgICAvLyBJZiBhIGRlbGF5IGlzIHByb3ZpZGVkIHdpdGhvdXQgYSB0aW1pbmcgZnVuY3Rpb25cbiAgICBAaWYgaXMtdGltZSgkdGltaW5nLWZ1bmN0aW9uKSBhbmQgbm90KCRkZWxheSkgeyAkZGVsYXk6ICR0aW1pbmctZnVuY3Rpb247ICR0aW1pbmctZnVuY3Rpb246IGZhbHNlOyAkaGFzLWRlbGF5czogdHJ1ZTsgfVxuXG4gICAgLy8gS2VlcCBhIGxpc3Qgb2YgZGVsYXlzIGluIGNhc2Ugb25lIGlzIHNwZWNpZmllZFxuICAgICRkZWxheXM6IGFwcGVuZCgkZGVsYXlzLCBpZigkZGVsYXksICRkZWxheSwgMHMpKTtcblxuICAgICR3ZWJraXQtdmFsdWU6IGFwcGVuZCgkd2Via2l0LXZhbHVlLCBjb21wYWN0KChwcmVmaXhlZC1mb3ItdHJhbnNpdGlvbigtd2Via2l0LCAkcHJvcGVydHkpICRkdXJhdGlvbiAkdGltaW5nLWZ1bmN0aW9uKS4uLikpO1xuICAgICAgICRtb3otdmFsdWU6IGFwcGVuZCggICAkbW96LXZhbHVlLCBjb21wYWN0KChwcmVmaXhlZC1mb3ItdHJhbnNpdGlvbiggICAtbW96LCAkcHJvcGVydHkpICRkdXJhdGlvbiAkdGltaW5nLWZ1bmN0aW9uICRkZWxheSkuLi4pKTtcbiAgICAgICAgICRvLXZhbHVlOiBhcHBlbmQoICAgICAkby12YWx1ZSwgY29tcGFjdCgocHJlZml4ZWQtZm9yLXRyYW5zaXRpb24oICAgICAtbywgJHByb3BlcnR5KSAkZHVyYXRpb24gJHRpbWluZy1mdW5jdGlvbiAkZGVsYXkpLi4uKSk7XG4gIH1cblxuICBAaWYgJGV4cGVyaW1lbnRhbC1zdXBwb3J0LWZvci13ZWJraXQgICAgeyAgICAgICAtd2Via2l0LXRyYW5zaXRpb24gOiAkd2Via2l0LXZhbHVlO1xuICAgIC8vIG9sZCB3ZWJraXQgZG9lc24ndCBzdXBwb3J0IHRoZSBkZWxheSBwYXJhbWV0ZXIgaW4gdGhlIHNob3J0aGFuZCBzbyB3ZSBwcm9ncmVzc2l2ZWx5IGVuaGFuY2UgaXQuXG4gICAgQGlmICRoYXMtZGVsYXlzICAgICAgICAgICAgICAgICAgICAgICB7IC13ZWJraXQtdHJhbnNpdGlvbi1kZWxheSA6ICRkZWxheXM7ICAgICAgIH0gfVxuICBAaWYgJGV4cGVyaW1lbnRhbC1zdXBwb3J0LWZvci1tb3ppbGxhICAgeyAgICAgICAgICAtbW96LXRyYW5zaXRpb24gOiAkbW96LXZhbHVlOyAgICB9XG4gIEBpZiAkZXhwZXJpbWVudGFsLXN1cHBvcnQtZm9yLW9wZXJhICAgICB7ICAgICAgICAgICAgLW8tdHJhbnNpdGlvbiA6ICRvLXZhbHVlOyAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uIDogJHRyYW5zaXRpb25zO1xufVxuXG4vLyBjb2VyY2UgYSBsaXN0IHRvIGJlIGNvbW1hIGRlbGltaXRlZCBvciBtYWtlIGEgbmV3LCBlbXB0eSBjb21tYSBkZWxpbWl0ZWQgbGlzdC5cbkBmdW5jdGlvbiBjb21tYS1saXN0KCRsaXN0OiAoKSkge1xuICBAcmV0dXJuIGpvaW4oKCksICRsaXN0LCBjb21tYSk7XG59XG5cbi8vIFJldHVybnMgYCRwcm9wZXJ0eWAgd2l0aCB0aGUgZ2l2ZW4gcHJlZml4IGlmIGl0IGlzIGZvdW5kIGluIGAkdHJhbnNpdGlvbmFibGUtcHJlZml4ZWQtdmFsdWVzYC5cbkBmdW5jdGlvbiBwcmVmaXhlZC1mb3ItdHJhbnNpdGlvbigkcHJlZml4LCAkcHJvcGVydHkpIHtcbiAgQGlmIHR5cGUtb2YoJHByb3BlcnR5KSA9PSBsaXN0IHtcbiAgICAkbmV3LWxpc3Q6IGNvbW1hLWxpc3QoKTtcbiAgICBAZWFjaCAkdiBpbiAkcHJvcGVydHkge1xuICAgICAgJG5ldy1saXN0OiBhcHBlbmQoJG5ldy1saXN0LCBwcmVmaXhlZC1mb3ItdHJhbnNpdGlvbigkcHJlZml4LCAkdikpO1xuICAgIH1cbiAgICBAcmV0dXJuICRuZXctbGlzdDtcbiAgfSBAZWxzZSB7XG4gICAgQGlmIGluZGV4KCR0cmFuc2l0aW9uYWJsZS1wcmVmaXhlZC12YWx1ZXMsICRwcm9wZXJ0eSkge1xuICAgICAgQHJldHVybiAjeyRwcmVmaXh9LSN7JHByb3BlcnR5fTtcbiAgICB9IEBlbHNlIHtcbiAgICAgIEByZXR1cm4gJHByb3BlcnR5O1xuICAgIH1cbiAgfVxufVxuXG4vLyBDaGVja3MgaWYgdGhlIHZhbHVlIGdpdmVuIGlzIGEgdW5pdCBvZiB0aW1lLlxuQGZ1bmN0aW9uIGlzLXRpbWUoJHZhbHVlKSB7XG4gIEBpZiB0eXBlLW9mKCR2YWx1ZSkgPT0gbnVtYmVyIHtcbiAgICBAcmV0dXJuIG5vdChub3QoaW5kZXgocyBtcywgdW5pdCgkdmFsdWUpKSkpO1xuICB9IEBlbHNlIHtcbiAgICBAcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wYXNzLW1peGlucy9jb21wYXNzL2NzczMvX3RyYW5zaXRpb24uc2NzcyIsIkBpbXBvcnQgXCJzaGFyZWRcIjtcblxuLy8gUHJvdmlkZXMgY3Jvc3MtYnJvd3NlciBDU1Mgb3BhY2l0eS4gVGFrZXMgYSBudW1iZXIgYmV0d2VlbiAwIGFuZCAxIGFzIHRoZSBhcmd1bWVudCwgZS5nLiAwLjUgZm9yIDUwJSBvcGFjaXR5LlxuLy9cbi8vICAgICBAcGFyYW0gJG9wYWNpdHlcbi8vICAgICAgICAgQSBudW1iZXIgYmV0d2VlbiAwIGFuZCAxLCB3aGVyZSAwIGlzIHRyYW5zcGFyZW50IGFuZCAxIGlzIG9wYXF1ZS5cblxuQG1peGluIG9wYWNpdHkoJG9wYWNpdHkpIHtcbiAgQGlmICRsZWdhY3ktc3VwcG9ydC1mb3ItaWU2IG9yICRsZWdhY3ktc3VwcG9ydC1mb3ItaWU3IG9yICRsZWdhY3ktc3VwcG9ydC1mb3ItaWU4IHtcbiAgICBmaWx0ZXI6IHVucXVvdGUoXCJwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuQWxwaGEoT3BhY2l0eT0je3JvdW5kKCRvcGFjaXR5ICogMTAwKX0pXCIpO1xuICB9XG4gIG9wYWNpdHk6ICRvcGFjaXR5O1xufVxuXG4vLyBNYWtlIGFuIGVsZW1lbnQgY29tcGxldGVseSB0cmFuc3BhcmVudC5cbkBtaXhpbiB0cmFuc3BhcmVudCB7IEBpbmNsdWRlIG9wYWNpdHkoMCk7IH1cblxuLy8gTWFrZSBhbiBlbGVtZW50IGNvbXBsZXRlbHkgb3BhcXVlLlxuQG1peGluIG9wYXF1ZSB7IEBpbmNsdWRlIG9wYWNpdHkoMSk7IH1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBhc3MtbWl4aW5zL2NvbXBhc3MvY3NzMy9fb3BhY2l0eS5zY3NzIiwiQGltcG9ydCBcIi4uL2xheW91dC9ncmlkLWJhY2tncm91bmRcIjtcblxuLy8gVGhlIGJhc2UgZm9udCBzaXplLlxuJGJhc2UtZm9udC1zaXplOiAxNnB4ICFkZWZhdWx0O1xuXG4vLyBUaGUgYmFzZSBsaW5lIGhlaWdodCBkZXRlcm1pbmVzIHRoZSBiYXNpYyB1bml0IG9mIHZlcnRpY2FsIHJoeXRobS5cbiRiYXNlLWxpbmUtaGVpZ2h0OiAyNHB4ICFkZWZhdWx0O1xuXG4vLyBTZXQgdGhlIGRlZmF1bHQgYm9yZGVyIHN0eWxlIGZvciByaHl0aG0gYm9yZGVycy5cbiRkZWZhdWx0LXJoeXRobS1ib3JkZXItc3R5bGU6IHNvbGlkICFkZWZhdWx0O1xuXG4vLyBUaGUgZGVmYXVsdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuJGJyb3dzZXItZGVmYXVsdC1mb250LXNpemU6IDE2cHg7XG5cbi8vIFNldCB0byBmYWxzZSBpZiB5b3Ugd2FudCB0byB1c2UgYWJzb2x1dGUgcGl4ZWxzIGluIHNpemluZyB5b3VyIHR5cG9ncmFwaHkuXG4kcmVsYXRpdmUtZm9udC1zaXppbmc6IHRydWUgIWRlZmF1bHQ7XG5cbi8vIEFsbG93cyB0aGUgYGFkanVzdC1mb250LXNpemUtdG9gIG1peGluIGFuZCB0aGUgYGxpbmVzLWZvci1mb250LXNpemVgIGZ1bmN0aW9uXG4vLyB0byByb3VuZCB0aGUgbGluZSBoZWlnaHQgdG8gdGhlIG5lYXJlc3QgaGFsZiBsaW5lIGhlaWdodCBpbnN0ZWFkIG9mIHRoZVxuLy8gbmVhcmVzdCBpbnRlZ3JhbCBsaW5lIGhlaWdodCB0byBhdm9pZCBsYXJnZSBzcGFjaW5nIGJldHdlZW4gbGluZXMuXG4kcm91bmQtdG8tbmVhcmVzdC1oYWxmLWxpbmU6IGZhbHNlICFkZWZhdWx0O1xuXG4vLyBFbnN1cmUgdGhlcmUgaXMgYXQgbGVhc3QgdGhpcyBtYW55IHBpeGVsc1xuLy8gb2YgdmVydGljYWwgcGFkZGluZyBhYm92ZSBhbmQgYmVsb3cgdGhlIHRleHQuXG4kbWluLWxpbmUtcGFkZGluZzogMnB4ICFkZWZhdWx0O1xuXG4vLyAkYmFzZS1mb250LXNpemUgYnV0IGluIHlvdXIgb3V0cHV0IHVuaXQgb2YgY2hvaWNlLlxuLy8gRGVmYXVsdHMgdG8gMWVtIHdoZW4gYCRyZWxhdGl2ZS1mb250LXNpemluZ2AgaXMgdHJ1ZS5cbiRmb250LXVuaXQ6IGlmKCRyZWxhdGl2ZS1mb250LXNpemluZywgMWVtLCAkYmFzZS1mb250LXNpemUpICFkZWZhdWx0O1xuXG4vLyBUaGUgYmFzaWMgdW5pdCBvZiBmb250IHJoeXRobS5cbiRiYXNlLXJoeXRobS11bml0OiAkYmFzZS1saW5lLWhlaWdodCAvICRiYXNlLWZvbnQtc2l6ZSAqICRmb250LXVuaXQ7XG5cbi8vIFRoZSBsZWFkZXIgaXMgdGhlIGFtb3VudCBvZiB3aGl0ZXNwYWNlIGluIGEgbGluZS5cbi8vIEl0IG1pZ2h0IGJlIHVzZWZ1bCBpbiB5b3VyIGNhbGN1bGF0aW9ucy5cbiRiYXNlLWxlYWRlcjogKCRiYXNlLWxpbmUtaGVpZ2h0IC0gJGJhc2UtZm9udC1zaXplKSAqICRmb250LXVuaXQgLyAkYmFzZS1mb250LXNpemU7XG5cbi8vIFRoZSBoYWxmLWxlYWRlciBpcyB0aGUgYW1vdW50IG9mIHdoaXRlc3BhY2UgYWJvdmUgYW5kIGJlbG93IGEgbGluZS5cbi8vIEl0IG1pZ2h0IGJlIHVzZWZ1bCBpbiB5b3VyIGNhbGN1bGF0aW9ucy5cbiRiYXNlLWhhbGYtbGVhZGVyOiAkYmFzZS1sZWFkZXIgLyAyO1xuXG4vLyBUcnVlIGlmIGEgbnVtYmVyIGhhcyBhIHJlbGF0aXZlIHVuaXQuXG5AZnVuY3Rpb24gcmVsYXRpdmUtdW5pdCgkbnVtYmVyKSB7XG4gIEByZXR1cm4gdW5pdCgkbnVtYmVyKSA9PSBcIiVcIiBvciB1bml0KCRudW1iZXIpID09IFwiZW1cIiBvciB1bml0KCRudW1iZXIpID09IFwicmVtXCJcbn1cblxuLy8gVHJ1ZSBpZiBhIG51bWJlciBoYXMgYW4gYWJzb2x1dGUgdW5pdC5cbkBmdW5jdGlvbiBhYnNvbHV0ZS11bml0KCRudW1iZXIpIHtcbiAgQHJldHVybiBub3QocmVsYXRpdmUtdW5pdCgkbnVtYmVyKSBvciB1bml0bGVzcygkbnVtYmVyKSk7XG59XG5cbkBpZiAkcmVsYXRpdmUtZm9udC1zaXppbmcgYW5kIG5vdChyZWxhdGl2ZS11bml0KCRmb250LXVuaXQpKSB7XG4gIEB3YXJuIFwiJHJlbGF0aXZlLWZvbnQtc2l6aW5nIGlzIHRydWUgYnV0ICRmb250LXVuaXQgaXMgc2V0IHRvICN7JGZvbnQtdW5pdH0gd2hpY2ggaXMgbm90IGEgcmVsYXRpdmUgdW5pdC5cIjtcbn1cblxuLy8gRXN0YWJsaXNoZXMgYSBmb250IGJhc2VsaW5lIGZvciB0aGUgZ2l2ZW4gZm9udC1zaXplLlxuQG1peGluIGVzdGFibGlzaC1iYXNlbGluZSgkZm9udC1zaXplOiAkYmFzZS1mb250LXNpemUpIHtcbiAgLy8gSUUgNiByZWZ1c2VzIHRvIHJlc2l6ZSBmb250cyBzZXQgaW4gcGl4ZWxzIGFuZCBpdCB3ZWlyZGx5IHJlc2l6ZXMgZm9udHNcbiAgLy8gd2hvc2Ugcm9vdCBpcyBzZXQgaW4gZW1zLiBTbyB3ZSBzZXQgdGhlIHJvb3QgZm9udCBzaXplIGluIHBlcmNlbnRhZ2VzIG9mXG4gIC8vIHRoZSBkZWZhdWx0IGZvbnQgc2l6ZS5cbiAgKiBodG1sIHtcbiAgICBmb250LXNpemU6IDEwMCUgKiAoJGZvbnQtc2l6ZSAvICRicm93c2VyLWRlZmF1bHQtZm9udC1zaXplKTtcbiAgfVxuICBodG1sIHtcbiAgICBmb250LXNpemU6ICRmb250LXNpemU7XG4gICAgQGluY2x1ZGUgYWRqdXN0LWxlYWRpbmctdG8oMSwgaWYoJHJlbGF0aXZlLWZvbnQtc2l6aW5nLCAkZm9udC1zaXplLCAkYmFzZS1mb250LXNpemUpKTtcbiAgfVxufVxuXG4vLyBSZXNldHMgdGhlIGxpbmUtaGVpZ2h0IHRvIDEgdmVydGljYWwgcmh5dGhtIHVuaXQuXG4vLyBEb2VzIG5vdCB3b3JrIG9uIGVsZW1lbnRzIHdob3NlIGZvbnQtc2l6ZSBpcyBkaWZmZXJlbnQgZnJvbSAkYmFzZS1mb250LXNpemUuXG4vL1xuLy8gQGRlcHJlY2F0ZWQgVGhpcyBtaXhpbiB3aWxsIGJlIHJlbW92ZWQgaW4gdGhlIG5leHQgcmVsZWFzZS5cbi8vIFBsZWFzZSB1c2UgdGhlIGBhZGp1c3QtbGVhZGluZy10b2AgbWl4aW4gaW5zdGVhZC5cbkBtaXhpbiByZXNldC1iYXNlbGluZSB7XG4gIEBpbmNsdWRlIGFkanVzdC1sZWFkaW5nLXRvKDEsIGlmKCRyZWxhdGl2ZS1mb250LXNpemluZywgJGJhc2UtZm9udC1zaXplLCAkYmFzZS1mb250LXNpemUpKTtcbn1cblxuLy8gU2hvdyBhIGJhY2tncm91bmQgaW1hZ2UgdGhhdCBjYW4gYmUgdXNlZCB0byBkZWJ1ZyB5b3VyIGFsaWdubWVudHMuXG4vLyBJbmNsdWRlIHRoZSAkaW1nIGFyZ3VtZW50IGlmIHlvdSB3b3VsZCByYXRoZXIgdXNlIHlvdXIgb3duIGltYWdlIHRoYW4gdGhlXG4vLyBDb21wYXNzIGRlZmF1bHQgZ3JhZGllbnQgaW1hZ2UuXG5AbWl4aW4gZGVidWctdmVydGljYWwtYWxpZ25tZW50KCRpbWc6IGZhbHNlKSB7XG4gIEBpZiAkaW1nIHtcbiAgICBiYWNrZ3JvdW5kOiBpbWFnZS11cmwoJGltZyk7XG4gIH0gQGVsc2Uge1xuICAgIEBpbmNsdWRlIGJhc2VsaW5lLWdyaWQtYmFja2dyb3VuZCgkYmFzZS1yaHl0aG0tdW5pdCk7XG4gIH1cbn1cblxuLy8gQWRqdXN0IGEgYmxvY2sgdG8gaGF2ZSBhIGRpZmZlcmVudCBmb250IHNpemUgYW5kIGxpbmUgaGVpZ2h0IHRvIG1haW50YWluIHRoZVxuLy8gcmh5dGhtLiAkbGluZXMgc3BlY2lmaWVzIGhvdyBtYW55IG11bHRpcGxlcyBvZiB0aGUgYmFzZWxpbmUgcmh5dGhtIGVhY2ggbGluZVxuLy8gb2YgdGhpcyBmb250IHNob3VsZCB1c2UgdXAuIEl0IGRvZXMgbm90IGhhdmUgdG8gYmUgYW4gaW50ZWdlciwgYnV0IGl0XG4vLyBkZWZhdWx0cyB0byB0aGUgc21hbGxlc3QgaW50ZWdlciB0aGF0IGlzIGxhcmdlIGVub3VnaCB0byBmaXQgdGhlIGZvbnQuXG4vLyBVc2UgJGZyb20tc2l6ZSB0byBhZGp1c3QgZnJvbSBhIGZvbnQtc2l6ZSBvdGhlciB0aGFuIHRoZSBiYXNlIGZvbnQtc2l6ZS5cbkBtaXhpbiBhZGp1c3QtZm9udC1zaXplLXRvKCR0by1zaXplLCAkbGluZXM6IGxpbmVzLWZvci1mb250LXNpemUoJHRvLXNpemUpLCAkZnJvbS1zaXplOiAkYmFzZS1mb250LXNpemUpIHtcbiAgQGlmIG5vdCgkcmVsYXRpdmUtZm9udC1zaXppbmcpIGFuZCAkZnJvbS1zaXplICE9ICRiYXNlLWZvbnQtc2l6ZSB7XG4gICAgQHdhcm4gXCIkcmVsYXRpdmUtZm9udC1zaXppbmcgaXMgZmFsc2UgYnV0IGEgcmVsYXRpdmUgZm9udCBzaXplIHdhcyBwYXNzZWQgdG8gYWRqdXN0LWZvbnQtc2l6ZS10b1wiO1xuICB9XG4gIGZvbnQtc2l6ZTogJGZvbnQtdW5pdCAqICR0by1zaXplIC8gJGZyb20tc2l6ZTtcbiAgQGluY2x1ZGUgYWRqdXN0LWxlYWRpbmctdG8oJGxpbmVzLCBpZigkcmVsYXRpdmUtZm9udC1zaXppbmcsICR0by1zaXplLCAkYmFzZS1mb250LXNpemUpKTtcbn1cblxuLy8gQWRqdXN0IGEgYmxvY2sgdG8gaGF2ZSBkaWZmZXJlbnQgbGluZSBoZWlnaHQgdG8gbWFpbnRhaW4gdGhlIHJoeXRobS5cbi8vICRsaW5lcyBzcGVjaWZpZXMgaG93IG1hbnkgbXVsdGlwbGVzIG9mIHRoZSBiYXNlbGluZSByaHl0aG0gZWFjaCBsaW5lIG9mIHRoaXNcbi8vIGZvbnQgc2hvdWxkIHVzZSB1cC4gSXQgZG9lcyBub3QgaGF2ZSB0byBiZSBhbiBpbnRlZ2VyLCBidXQgaXQgZGVmYXVsdHMgdG8gdGhlXG4vLyBzbWFsbGVzdCBpbnRlZ2VyIHRoYXQgaXMgbGFyZ2UgZW5vdWdoIHRvIGZpdCB0aGUgZm9udC5cbkBtaXhpbiBhZGp1c3QtbGVhZGluZy10bygkbGluZXMsICRmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZSkge1xuICBsaW5lLWhlaWdodDogcmh5dGhtKCRsaW5lcywgJGZvbnQtc2l6ZSk7XG59XG5cbi8vIENhbGN1bGF0ZSByaHl0aG0gdW5pdHMuXG5AZnVuY3Rpb24gcmh5dGhtKFxuICAkbGluZXM6IDEsXG4gICRmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZSxcbiAgJG9mZnNldDogMFxuKSB7XG4gIEBpZiBub3QoJHJlbGF0aXZlLWZvbnQtc2l6aW5nKSBhbmQgJGZvbnQtc2l6ZSAhPSAkYmFzZS1mb250LXNpemUge1xuICAgIEB3YXJuIFwiJHJlbGF0aXZlLWZvbnQtc2l6aW5nIGlzIGZhbHNlIGJ1dCBhIHJlbGF0aXZlIGZvbnQgc2l6ZSB3YXMgcGFzc2VkIHRvIHRoZSByaHl0aG0gZnVuY3Rpb25cIjtcbiAgfVxuICAkcmh5dGhtOiAkZm9udC11bml0ICogKCRsaW5lcyAqICRiYXNlLWxpbmUtaGVpZ2h0IC0gJG9mZnNldCkgLyAkZm9udC1zaXplO1xuICAvLyBSb3VuZCB0aGUgcGl4ZWxzIGRvd24gdG8gbmVhcmVzdCBpbnRlZ2VyLlxuICBAaWYgdW5pdCgkcmh5dGhtKSA9PSBweCB7XG4gICAgJHJoeXRobTogZmxvb3IoJHJoeXRobSk7XG4gIH1cbiAgQHJldHVybiAkcmh5dGhtO1xufVxuXG4vLyBDYWxjdWxhdGUgdGhlIG1pbmltdW0gbXVsdGlwbGUgb2Ygcmh5dGhtIHVuaXRzIG5lZWRlZCB0byBjb250YWluIHRoZSBmb250LXNpemUuXG5AZnVuY3Rpb24gbGluZXMtZm9yLWZvbnQtc2l6ZSgkZm9udC1zaXplKSB7XG4gICRsaW5lczogaWYoJHJvdW5kLXRvLW5lYXJlc3QtaGFsZi1saW5lLFxuICAgICAgICAgICAgICBjZWlsKDIgKiAkZm9udC1zaXplIC8gJGJhc2UtbGluZS1oZWlnaHQpIC8gMixcbiAgICAgICAgICAgICAgY2VpbCgkZm9udC1zaXplIC8gJGJhc2UtbGluZS1oZWlnaHQpKTtcbiAgQGlmICRsaW5lcyAqICRiYXNlLWxpbmUtaGVpZ2h0IC0gJGZvbnQtc2l6ZSA8ICRtaW4tbGluZS1wYWRkaW5nICogMiB7XG4gICAgJGxpbmVzOiAkbGluZXMgKyBpZigkcm91bmQtdG8tbmVhcmVzdC1oYWxmLWxpbmUsIDAuNSwgMSk7XG4gIH1cbiAgQHJldHVybiAkbGluZXM7XG59XG5cbi8vIEFwcGx5IGxlYWRpbmcgd2hpdGVzcGFjZS4gVGhlICRwcm9wZXJ0eSBjYW4gYmUgbWFyZ2luIG9yIHBhZGRpbmcuXG5AbWl4aW4gbGVhZGVyKCRsaW5lczogMSwgJGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplLCAkcHJvcGVydHk6IG1hcmdpbikge1xuICAjeyRwcm9wZXJ0eX0tdG9wOiByaHl0aG0oJGxpbmVzLCAkZm9udC1zaXplKTtcbn1cblxuLy8gQXBwbHkgbGVhZGluZyB3aGl0ZXNwYWNlIGFzIHBhZGRpbmcuXG5AbWl4aW4gcGFkZGluZy1sZWFkZXIoJGxpbmVzOiAxLCAkZm9udC1zaXplOiAkYmFzZS1mb250LXNpemUpIHtcbiAgcGFkZGluZy10b3A6IHJoeXRobSgkbGluZXMsICRmb250LXNpemUpO1xufVxuXG4vLyBBcHBseSBsZWFkaW5nIHdoaXRlc3BhY2UgYXMgbWFyZ2luLlxuQG1peGluIG1hcmdpbi1sZWFkZXIoJGxpbmVzOiAxLCAkZm9udC1zaXplOiAkYmFzZS1mb250LXNpemUpIHtcbiAgbWFyZ2luLXRvcDogcmh5dGhtKCRsaW5lcywgJGZvbnQtc2l6ZSk7XG59XG5cbi8vIEFwcGx5IHRyYWlsaW5nIHdoaXRlc3BhY2UuIFRoZSAkcHJvcGVydHkgY2FuIGJlIG1hcmdpbiBvciBwYWRkaW5nLlxuQG1peGluIHRyYWlsZXIoJGxpbmVzOiAxLCAkZm9udC1zaXplOiAkYmFzZS1mb250LXNpemUsICRwcm9wZXJ0eTogbWFyZ2luKSB7XG4gICN7JHByb3BlcnR5fS1ib3R0b206IHJoeXRobSgkbGluZXMsICRmb250LXNpemUpO1xufVxuXG4vLyBBcHBseSB0cmFpbGluZyB3aGl0ZXNwYWNlIGFzIHBhZGRpbmcuXG5AbWl4aW4gcGFkZGluZy10cmFpbGVyKCRsaW5lczogMSwgJGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplKSB7XG4gIHBhZGRpbmctYm90dG9tOiByaHl0aG0oJGxpbmVzLCAkZm9udC1zaXplKTtcbn1cblxuLy8gQXBwbHkgdHJhaWxpbmcgd2hpdGVzcGFjZSBhcyBtYXJnaW4uXG5AbWl4aW4gbWFyZ2luLXRyYWlsZXIoJGxpbmVzOiAxLCAkZm9udC1zaXplOiAkYmFzZS1mb250LXNpemUpIHtcbiAgbWFyZ2luLWJvdHRvbTogcmh5dGhtKCRsaW5lcywgJGZvbnQtc2l6ZSk7XG59XG5cbi8vIFNob3J0aGFuZCBtaXhpbiB0byBhcHBseSB3aGl0ZXNwYWNlIGZvciB0b3AgYW5kIGJvdHRvbSBtYXJnaW5zIGFuZCBwYWRkaW5nLlxuQG1peGluIHJoeXRobSgkbGVhZGVyOiAwLCAkcGFkZGluZy1sZWFkZXI6IDAsICRwYWRkaW5nLXRyYWlsZXI6IDAsICR0cmFpbGVyOiAwLCAkZm9udC1zaXplOiAkYmFzZS1mb250LXNpemUpIHtcbiAgQGluY2x1ZGUgbGVhZGVyKCRsZWFkZXIsICRmb250LXNpemUpO1xuICBAaW5jbHVkZSBwYWRkaW5nLWxlYWRlcigkcGFkZGluZy1sZWFkZXIsICRmb250LXNpemUpO1xuICBAaW5jbHVkZSBwYWRkaW5nLXRyYWlsZXIoJHBhZGRpbmctdHJhaWxlciwgJGZvbnQtc2l6ZSk7XG4gIEBpbmNsdWRlIHRyYWlsZXIoJHRyYWlsZXIsICRmb250LXNpemUpO1xufVxuXG4vLyBBcHBseSBhIGJvcmRlciBhbmQgd2hpdGVzcGFjZSB0byBhbnkgc2lkZSB3aXRob3V0IGRlc3Ryb3lpbmcgdGhlIHZlcnRpY2FsXG4vLyByaHl0aG0uIFRoZSB3aGl0ZXNwYWNlIG11c3QgYmUgZ3JlYXRlciB0aGFuIHRoZSB3aWR0aCBvZiB0aGUgYm9yZGVyLlxuQG1peGluIGFwcGx5LXNpZGUtcmh5dGhtLWJvcmRlcigkc2lkZSwgJHdpZHRoOiAxcHgsICRsaW5lczogMSwgJGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplLCAkYm9yZGVyLXN0eWxlOiAkZGVmYXVsdC1yaHl0aG0tYm9yZGVyLXN0eWxlKSB7XG4gIEBpZiBub3QoJHJlbGF0aXZlLWZvbnQtc2l6aW5nKSBhbmQgJGZvbnQtc2l6ZSAhPSAkYmFzZS1mb250LXNpemUge1xuICAgIEB3YXJuIFwiJHJlbGF0aXZlLWZvbnQtc2l6aW5nIGlzIGZhbHNlIGJ1dCBhIHJlbGF0aXZlIGZvbnQgc2l6ZSB3YXMgcGFzc2VkIHRvIGFwcGx5LXNpZGUtcmh5dGhtLWJvcmRlclwiO1xuICB9XG4gIGJvcmRlci0jeyRzaWRlfS1zdHlsZTogJGJvcmRlci1zdHlsZTtcbiAgYm9yZGVyLSN7JHNpZGV9LXdpZHRoOiAkZm9udC11bml0ICogJHdpZHRoIC8gJGZvbnQtc2l6ZTtcbiAgcGFkZGluZy0jeyRzaWRlfTogcmh5dGhtKCRsaW5lcywgJGZvbnQtc2l6ZSwgJG9mZnNldDogJHdpZHRoKTtcbn1cblxuLy8gQXBwbHkgYm9yZGVycyBhbmQgd2hpdGVzcGFjZSBlcXVhbGx5IHRvIGFsbCBzaWRlcy5cbkBtaXhpbiByaHl0aG0tYm9yZGVycygkd2lkdGg6IDFweCwgJGxpbmVzOiAxLCAkZm9udC1zaXplOiAkYmFzZS1mb250LXNpemUsICRib3JkZXItc3R5bGU6ICRkZWZhdWx0LXJoeXRobS1ib3JkZXItc3R5bGUpIHtcbiAgQGlmIG5vdCgkcmVsYXRpdmUtZm9udC1zaXppbmcpIGFuZCAkZm9udC1zaXplICE9ICRiYXNlLWZvbnQtc2l6ZSB7XG4gICAgQHdhcm4gXCIkcmVsYXRpdmUtZm9udC1zaXppbmcgaXMgZmFsc2UgYnV0IGEgcmVsYXRpdmUgZm9udCBzaXplIHdhcyBwYXNzZWQgdG8gcmh5dGhtLWJvcmRlcnNcIjtcbiAgfVxuICBib3JkZXI6IHtcbiAgICBzdHlsZTogJGJvcmRlci1zdHlsZTtcbiAgICB3aWR0aDogJGZvbnQtdW5pdCAqICR3aWR0aCAvICRmb250LXNpemU7XG4gIH07XG4gIHBhZGRpbmc6IHJoeXRobSgkbGluZXMsICRmb250LXNpemUsICRvZmZzZXQ6ICR3aWR0aCk7XG59XG5cbi8vIEFwcGx5IGEgbGVhZGluZyBib3JkZXIuXG5AbWl4aW4gbGVhZGluZy1ib3JkZXIoJHdpZHRoOiAxcHgsICRsaW5lczogMSwgJGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplLCAkYm9yZGVyLXN0eWxlOiAkZGVmYXVsdC1yaHl0aG0tYm9yZGVyLXN0eWxlKSB7XG4gIEBpbmNsdWRlIGFwcGx5LXNpZGUtcmh5dGhtLWJvcmRlcih0b3AsICR3aWR0aCwgJGxpbmVzLCAkZm9udC1zaXplLCAkYm9yZGVyLXN0eWxlKTtcbn1cblxuLy8gQXBwbHkgYSB0cmFpbGluZyBib3JkZXIuXG5AbWl4aW4gdHJhaWxpbmctYm9yZGVyKCR3aWR0aDogMXB4LCAkbGluZXM6IDEsICRmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZSwgJGJvcmRlci1zdHlsZTogJGRlZmF1bHQtcmh5dGhtLWJvcmRlci1zdHlsZSkge1xuICBAaW5jbHVkZSBhcHBseS1zaWRlLXJoeXRobS1ib3JkZXIoYm90dG9tLCAkd2lkdGgsICRsaW5lcywgJGZvbnQtc2l6ZSwgJGJvcmRlci1zdHlsZSk7XG59XG5cbi8vIEFwcGx5IGJvdGggbGVhZGluZyBhbmQgdHJhaWxpbmcgYm9yZGVycy5cbkBtaXhpbiBob3Jpem9udGFsLWJvcmRlcnMoJHdpZHRoOiAxcHgsICRsaW5lczogMSwgJGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplLCAkYm9yZGVyLXN0eWxlOiAkZGVmYXVsdC1yaHl0aG0tYm9yZGVyLXN0eWxlKSB7XG4gIEBpbmNsdWRlIGxlYWRpbmctYm9yZGVyKCR3aWR0aCwgJGxpbmVzLCAkZm9udC1zaXplLCAkYm9yZGVyLXN0eWxlKTtcbiAgQGluY2x1ZGUgdHJhaWxpbmctYm9yZGVyKCR3aWR0aCwgJGxpbmVzLCAkZm9udC1zaXplLCAkYm9yZGVyLXN0eWxlKTtcbn1cblxuLy8gQWxpYXMgZm9yIGBob3Jpem9udGFsLWJvcmRlcnNgIG1peGluLlxuQG1peGluIGgtYm9yZGVycygkd2lkdGg6IDFweCwgJGxpbmVzOiAxLCAkZm9udC1zaXplOiAkYmFzZS1mb250LXNpemUsICRib3JkZXItc3R5bGU6ICRkZWZhdWx0LXJoeXRobS1ib3JkZXItc3R5bGUpIHtcbiAgQGluY2x1ZGUgaG9yaXpvbnRhbC1ib3JkZXJzKCR3aWR0aCwgJGxpbmVzLCAkZm9udC1zaXplLCAkYm9yZGVyLXN0eWxlKTtcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBhc3MtbWl4aW5zL2NvbXBhc3MvdHlwb2dyYXBoeS9fdmVydGljYWxfcmh5dGhtLnNjc3MiLCIvLyBXZWIgZm9udFxuQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9lYXJseWFjY2Vzcy9ub3Rvc2Fuc2phcGFuZXNlLmNzcyk7XG5cbiRiYXNlLWZvbnQtc2l6ZTogMTZweDtcbiRiYXNlLWxpbmUtaGVpZ2h0OiAyNHB4O1xuQGluY2x1ZGUgZXN0YWJsaXNoLWJhc2VsaW5lO1xuXG5ib2R5IHtcbiAgQGV4dGVuZCAlZmZnO1xuICBAaW5jbHVkZSBicmVhay1wb2ludChtb2JpbGUpIHtcbiAgICAkZm9udC1zaXplOiAxNHB4O1xuICAgIEBpbmNsdWRlIGFkanVzdC1mb250LXNpemUtdG8oJGZvbnQtc2l6ZSk7XG4gIH1cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2Jhc2UvX3R5cG9ncmFwaHkuc2NzcyIsIi8qKiBrZXlmcmFtZXMgKiovXG5AaW5jbHVkZSBrZXlmcmFtZXMoZmFkZS1pbikge1xuICAgIDAlIHtcbiAgICAgICAgb3BhY2l0eTowO1xuICAgIH1cbiAgICAxMDAlIHtcbiAgICAgICAgb3BhY2l0eToxO1xuICAgIH1cbn1cbkBpbmNsdWRlIGtleWZyYW1lcyhmYWRlLW91dCkge1xuICAgIDAlIHtcbiAgICAgICAgb3BhY2l0eToxO1xuICAgIH1cbiAgICAxMDAlIHtcbiAgICAgICAgb3BhY2l0eTowO1xuICAgIH1cbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9iYXNlL19rZXlmcmFtZXMuc2NzcyIsIi8qKiogbGF5b3V0ICoqKi9cbkBpbXBvcnQgXCJicmVhZGNydW1ic1wiO1xuQGltcG9ydCBcImNvbW1vblwiO1xuQGltcG9ydCBcImZvb3RlclwiO1xuQGltcG9ydCBcImhlYWRlclwiO1xuQGltcG9ydCBcIm5hdmJhclwiO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2xheW91dC9fYWxsLnNjc3MiLCIvKioqIEJyZWFkY3J1bWJzICoqKi9cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9sYXlvdXQvX2JyZWFkY3J1bWJzLnNjc3MiLCIvKioqIENvbW1vbiAqKiovXG4ubm9zY3JpcHQge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmU1ZTU7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2YwMDtcbiAgICBjb2xvcjogI2YwMDtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGxpbmUtaGVpZ2h0OiAzO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbmh0bWwsXG5ib2R5IHtcbiAgICBoZWlnaHQ6IDEwMCU7XG59XG4uY29udGFpbmVyIHtcbiAgICBAZXh0ZW5kICVjbGVhcmZpeDtcbiAgICBAaW5jbHVkZSBib3gtc2l6aW5nKGJvcmRlci1ib3gpO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHdpZHRoOiAkd2lkdGg7XG4gICAgQGluY2x1ZGUgYnJlYWstcG9pbnQodGFibGV0KSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbn1cbi5pbm5lciB7XG4gICAgQGV4dGVuZCAlY2xlYXJmaXg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgd2lkdGg6ICR3aWR0aDtcbn1cblxuLm5vdGUtYXJlYSB7XG4gICAgJGZvbnQtc2l6ZTogMTRweDtcbiAgICBAaW5jbHVkZSBmb250LXNpemUtcHgtdG8tcmVtKCRmb250LXNpemUpO1xuICAgIG1hcmdpbjogMWVtIDA7XG4gICAgYSB7XG4gICAgICAgIGNvbG9yOiAjMDJCODc1O1xuICAgICAgICBAaW5jbHVkZSBob3Zlci11bmRlcmxpbmUoZmFkZSk7XG4gICAgfVxuICAgIC5hdHRlbnRpb24ge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAyZW07XG4gICAgfVxuICAgIC5jaGVja2JveCB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9sYXlvdXQvX2NvbW1vbi5zY3NzIiwiLy8gQ29sb3JzXG4kZ3JlZW46ICMwMkI4NzU7XG4kcmVkOiByZWQ7XG5cbiRib3JkZXJDb2xvcjogI2NjYztcbiRiYWNrZ3JvdW5kQ29sb3I6ICNmYWZhZmE7XG4ka2V5Q29sb3I6ICRncmVlbjtcblxuLy8gU3VwcG9ydCBTVkcgZm9yIElFOVxuJGV4cGVyaW1lbnRhbC1zdXBwb3J0LWZvci1zdmc6IHRydWU7XG5cbi8vIFZlbmRvciBQcmVmaXhcbi8vICRleHBlcmltZW50YWwtc3VwcG9ydC1mb3Itb3BlcmE6IGZhbHNlOyAvLyAtby1cbi8vICRleHBlcmltZW50YWwtc3VwcG9ydC1mb3ItbWljcm9zb2Z0OiBmYWxzZTsgLy8gLW1zLVxuLy8gJGV4cGVyaW1lbnRhbC1zdXBwb3J0LWZvci1tb3ppbGxhOiBmYWxzZTsgLy8gLW1vei1cblxuJHdpZHRoOiA5MCU7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9iYXNlL192YXIuc2NzcyIsIi8qKiogRm9vdGVyICoqKi9cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9sYXlvdXQvX2Zvb3Rlci5zY3NzIiwiLyoqKiBIZWFkZXIgKioqL1xuI2hlYWRlciB7XG4gICAgQGV4dGVuZCAlY2xlYXJmaXg7XG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vbGF5b3V0L19oZWFkZXIuc2NzcyIsIi8qKiogTmF2aWdhdGlvbiAqKiovXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vbGF5b3V0L19uYXZiYXIuc2NzcyIsIi8qKiogbW9kdWxlICoqKi9cbkBpbXBvcnQgXCJidXR0b25zXCI7XG5AaW1wb3J0IFwiZm9ybXNcIjtcbkBpbXBvcnQgXCJ0YWJsZXNcIjtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9tb2R1bGUvX2FsbC5zY3NzIiwiLyogQnV0dG9ucyAqL1xuLnN1Ym1pdC1idXR0b24ge1xuICAgIGFwcGVhcmFuY2U6IG5vbmU7XG4gICAgYmFja2dyb3VuZDogJGtleUNvbG9yO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBjb2xvcjogJGJhY2tncm91bmRDb2xvcjtcbiAgICAkZm9udC1zaXplOiAyMHB4O1xuICAgIEBpbmNsdWRlIGZvbnQtc2l6ZS1weC10by1yZW0oJGZvbnQtc2l6ZSk7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiAzMjBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyZW07XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIEBleHRlbmQgJWhvdmVyO1xufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vbW9kdWxlL19idXR0b25zLnNjc3MiLCIvKiBGb3JtcyAqL1xuLmZvcm0td3JhcHBlciB7XG4gICAgYmFja2dyb3VuZDogI2Y3ZjdmNztcbiAgICBwYWRkaW5nOiAxMCU7XG4gICAgd2lkdGg6IDkwJTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBAaW5jbHVkZSBicmVhay1wb2ludCh0YWJsZXQpIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxufVxuLmZvcm0tc3R5bGUwMSB7XG4gICAgJGZvbnQtc2l6ZTogMTZweDtcbiAgICBAaW5jbHVkZSBmb250LXNpemUtcHgtdG8tcmVtKCRmb250LXNpemUpO1xuICAgIGxhYmVsIHtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cbiAgICBpbnB1dFt0eXBlPVwidGV4dFwiXSxcbiAgICBpbnB1dFt0eXBlPVwibnVtYmVyXCJdLFxuICAgIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSxcbiAgICBpbnB1dFt0eXBlPVwiZW1haWxcIl0sXG4gICAgc2VsZWN0LFxuICAgIHRleHRhcmVhIHtcbiAgICAgICAgJGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgQGluY2x1ZGUgZm9udC1zaXplLXB4LXRvLXJlbSgkZm9udC1zaXplKTtcbiAgICAgICAgYmFja2dyb3VuZDokYmFja2dyb3VuZENvbG9yO1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgfVxuICAgIGlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxuICAgIGlucHV0W3R5cGU9XCJudW1iZXJcIl0sXG4gICAgaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdLFxuICAgIGlucHV0W3R5cGU9XCJlbWFpbFwiXSxcbiAgICB0ZXh0YXJlYSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgICB9XG4gICAgaW5wdXRbdHlwZT1cInRleHRcIl0sXG4gICAgaW5wdXRbdHlwZT1cIm51bWJlclwiXSxcbiAgICBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0sXG4gICAgaW5wdXRbdHlwZT1cImVtYWlsXCJdLFxuICAgIHRleHRhcmVhLFxuICAgIHNlbGVjdCB7XG4gICAgICAgIGFwcGVhcmFuY2U6IG5vbmU7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICRib3JkZXJDb2xvcjtcbiAgICAgICAgcGFkZGluZzogMTBweDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgLjVzIGVhc2U7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgICAmOmhvdmVyLFxuICAgICAgICAmOmZvY3VzIHtcbiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIGRhcmtlbigkYm9yZGVyQ29sb3IsIDMwJSk7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgICAgICB9XG4gICAgfVxuICAgIC5zZWxlY3Qtd3JhcHBlcntcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgIH1cbiAgICAuc2VsZWN0LXdyYXBwZXI6OmFmdGVye1xuICAgICAgICBAaW5jbHVkZSBwc2V1ZG8tZWxlbWVudDtcbiAgICAgICAgei1pbmRleDogMDtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIG1hcmdpbjogYXV0byAwO1xuICAgICAgICByaWdodDogOXB4O1xuICAgICAgICB3aWR0aDogMDtcbiAgICAgICAgaGVpZ2h0OiAwO1xuICAgICAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgICAgICBib3JkZXItd2lkdGg6IDZweCA2cHggMCA2cHg7XG4gICAgICAgIGJvcmRlci1jb2xvcjogZGFya2VuKCRib3JkZXJDb2xvciwgMjAlKSB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcbiAgICB9XG4gICAgc2VsZWN0OjotbXMtZXhwYW5kIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gICAgLnN1Ym1pdC1idXR0b24ge1xuICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICB9XG59XG5cbi5jaGVja2JveC1saXN0IHtcbiAgICBwYWRkaW5nLWxlZnQ6IDJlbTtcbiAgICBwYWRkaW5nLWJvdHRvbTogMWVtO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjO1xufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL21vZHVsZS9fZm9ybXMuc2NzcyIsIi8qIFRhYmxlcyAqL1xuLy8gaWXooajnpLrltKnjgozop6PmtohcbnRhYmxlIHtcbiAgICB0YWJsZS1sYXlvdXQ6IGZpeGVkO1xufVxuLnRhYmxlMDEge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRoIHtcbiAgICAgICAgd2lkdGg6IDMwJTtcbiAgICAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAmLnJlcXVpcmVkIHtcbiAgICAgICAgICAgICY6OmFmdGVyIHtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBwc2V1ZG8tZWxlbWVudCgn5b+F6aCIJyk7XG4gICAgICAgICAgICAgICAgY29sb3I6ICRyZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgdGQge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICYuY29sLTIge1xuICAgICAgICAgICAgLnNlbGVjdC13cmFwcGVyIHtcbiAgICAgICAgICAgICAgICB3aWR0aDogNDklO1xuICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgICAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDIlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBicmVhay1wb2ludChtb2JpbGUpIHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpbnB1dCB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgIHdpZHRoOiA0OSU7XG4gICAgICAgICAgICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMiU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGJyZWFrLXBvaW50KHRhYmxldCkge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICYucG9zdGFsLWNvZGUge1xuICAgICAgICAgICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAyJTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwIDElO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpbnB1dCxcbiAgICAgICAgICAgICAgICAuc2VsZWN0LXdyYXBwZXIge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMjclO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIGJyZWFrLXBvaW50KG1vYmlsZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDMwLjUlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJi5jYXJkIHtcbiAgICAgICAgICAgICAgICAuc2VsZWN0LXdyYXBwZXIge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMjclO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDYlO1xuICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBicmVhay1wb2ludChtb2JpbGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiA5MCU7XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwJTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAmOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgcHNldWRvLWVsZW1lbnQoJ+aciCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAtMTklO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogN3B4O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIGJyZWFrLXBvaW50KG1vYmlsZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByaWdodDogLTEwJTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgcHNldWRvLWVsZW1lbnQoJ+W5tCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAtMTklO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogN3B4O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIGJyZWFrLXBvaW50KG1vYmlsZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByaWdodDogLTEwJTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgJi5jb2wtMyB7XG4gICAgICAgICAgICAuc2VsZWN0LXdyYXBwZXIge1xuICAgICAgICAgICAgICAgIHdpZHRoOiAzMiU7XG4gICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAyJTtcbiAgICAgICAgICAgICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGJyZWFrLXBvaW50KG1vYmlsZSkge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlucHV0IHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDMyJTtcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDIlO1xuICAgICAgICAgICAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgYnJlYWstcG9pbnQobW9iaWxlKSB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJi5waG9uZSB7XG4gICAgICAgICAgICAgICAgc3BhbiB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDIlO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDAgMSU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlucHV0LFxuICAgICAgICAgICAgICAgIC5zZWxlY3Qtd3JhcHBlciB7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAyNyU7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgYnJlYWstcG9pbnQobW9iaWxlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMzAuNSU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmLmJpcnRoIHtcbiAgICAgICAgICAgICAgICAuc2VsZWN0LXdyYXBwZXIge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMjclO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDYlO1xuICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBicmVhay1wb2ludChtb2JpbGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiA5MCU7XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwJTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAmOjpiZWZvcmUge1xuICAgICAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgcHNldWRvLWVsZW1lbnQoJ+aciCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IC0xOSU7XG4gICAgICAgICAgICAgICAgICAgICAgICB0b3A6IDdweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIGJyZWFrLXBvaW50KG1vYmlsZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAtMTAlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgICAgICAgICAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBwc2V1ZG8tZWxlbWVudCgn5bm0Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IC0xOSU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9wOiA3cHg7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgYnJlYWstcG9pbnQobW9iaWxlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAtMTAlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICAgICAgICAgICAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBwc2V1ZG8tZWxlbWVudCgn5pelJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IC0xOSU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9wOiA3cHg7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgYnJlYWstcG9pbnQobW9iaWxlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAtMTAlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAmLnZlcnRpY2FsIHtcbiAgICAgICAgICAgIGxpIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAyJTtcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyJTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAmLnN1Yi1sYWJlbCB7XG4gICAgICAgICAgICBwIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgICAgICAgICB3aWR0aDogNSU7XG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgYnJlYWstcG9pbnQodGFibGV0KSB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpbnB1dCxcbiAgICAgICAgICAgIC5zZWxlY3Qtd3JhcHBlciB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDQ0JTtcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBicmVhay1wb2ludCh0YWJsZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICYubWVzc2FnZSB7XG4gICAgICAgICAgICAkZm9udC1zaXplOiAxNHB4O1xuICAgICAgICAgICAgQGluY2x1ZGUgZm9udC1zaXplLXB4LXRvLXJlbSgkZm9udC1zaXplKTtcbiAgICAgICAgICAgIGNvbG9yOiAkcmVkO1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogMWVtO1xuICAgICAgICAgICAgcGFkZGluZzogMCAxZW07XG4gICAgICAgICAgICBAaW5jbHVkZSBicmVhay1wb2ludChtb2JpbGUpIHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwIDVweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuICAgICAgICB9XG4gICAgfVxuICAgIHRoLFxuICAgIHRkIHtcbiAgICAgICAgQGV4dGVuZCAlY2xlYXJmaXg7XG4gICAgICAgIHBhZGRpbmc6IDFlbTtcbiAgICAgICAgQGluY2x1ZGUgYnJlYWstcG9pbnQodGFibGV0KSB7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgcGFkZGluZzogMiU7XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9tb2R1bGUvX3RhYmxlcy5zY3NzIiwiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICAgIEJlbG93IEZvciBFYWNoIFBhZ2VcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbkBpbXBvcnQgXCJob21lXCI7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFnZXMvX2FsbC5zY3NzIiwiLyoqKiAvICoqKi9cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWdlcy9faG9tZS5zY3NzIl0sInNvdXJjZVJvb3QiOiIifQ==*/
